* Biotools                                                           :career:
:PROPERTIES:
:CREATED:  [2020-07-02 Thu 13:14]
:ID:       b03025b7-4b60-4196-8d7f-d947c7d64b28
:END:
** Processes
:PROPERTIES:
:CREATED:  [2020-04-23 Thu 08:54]
:END:
*** sequence qc
- https://sarahpenir.github.io/bioinformatics/awk/calculating-mapping-stats-from-a-bam-file-using-samtools-and-awk/
- https://rtsf.natsci.msu.edu/genomics/tech-notes/fastqc-tutorial-and-faq/#:~:text=The%20output%20from%20FastQC%2C%20after,or%20%E2%80%9CFail%E2%80%9D%20is%20assigned.
**** coverage and depth
- https://www.htslib.org/doc/samtools-depth.1.html#OPTIONS
- for coverage https://www.biostars.org/p/104063/
*** single-cell RNA sequencing (scRNA-seq)
:PROPERTIES:
:ID:       2bbeb644-af54-4f07-80ad-3584e1e21b04
:END:
- https://www.workcast.com/AuditoriumAuthenticator.aspx?cpak=8475927829006248&pak=1763506853003757
- cite:qi2019 
- applications
  - [[id:7bb87c84-6b06-44ef-9a1d-1bb9b9e57295][immunoprofiling]]
  - intra-tumor heterogeneity / [[id:12cfb78c-7912-4c68-b0f4-e2f90c112185][tumor microenvironment]]
    - cite:lawson2018 
- cite:stuart2019 
- [[id:1acf73b6-ca1e-458c-91c1-b93f17b80a02][single-cell illumina workshop [2019-09-10 Tue 09:00-15:30]​]]
*** variant calling
**** SCNA variants 
:PROPERTIES:
:ID:       179ce37c-f8cf-44b3-872b-e32677bcb49c
:END:
- SCNAs
  - https://pmbio.org/module-05-somatic/0005/04/02/Somatic_CNV_FilteringAnnotationReview/
  - https://www.annualreviews.org/doi/full/10.1146/annurev-genom-082410-101404?url_ver=Z39.88-2003&rfr_id=ori%3Arid%3Acrossref.org&rfr_dat=cr_pub%3Dpubmed
  - cite:quigley2018
  - https://bioconductor.org/packages/release/bioc/html/DNAcopy.html
  - cite:talevich2016
  - [[file:~/repos/copy-number/]]
  - [[file:~/repos/copy-number/copy-number.org]]
  - https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-14-S11-S1
  - https://www.youtube.com/watch?v=m9XPWJrMThY&t=8s
  - https://deeptools.readthedocs.io/en/latest/content/installation.html
  - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5737511/
- WGS callers
  - https://github.com/GavinHaLab
*** public data, data mapping
:PROPERTIES:
:CREATED:  [2020-07-02 Thu 13:18]
:ID:       7b386a21-a6b8-49d1-ad4b-f5976bf30666
:END:
:LOGBOOK:
CLOCK: [2020-07-02 Thu 13:19]--[2020-07-02 Thu 13:29] =>  0:10
:END:
- https://www.r-bloggers.com/converting-mouse-to-human-gene-names-with-biomart-package/
- geo submission   
  - https://www.ncbi.nlm.nih.gov/geo/info/seq.html
  - [[http://yeolab.github.io/onboarding/geo.html][see for useful ftp commands]]
  - [[https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE138253][example from Rentschler lab]]
*** testing, modeling, and read simulation
- downsample
  - fastq
    - https://www.biostars.org/p/6544/
  - bam (no pair preservation) https://www.biostars.org/p/44527/#126428 https://www.biostars.org/p/145820/
- read simulation 
  - RNA-seq reads https://rdrr.io/bioc/polyester/
  - http://bioinform.github.io/varsim/
  - https://omictools.com/data-simulation3-category?sortby=recency
  - simulate reads
    - https://github.com/lh3/wgsim
*** immunoprofiling
:PROPERTIES:
:ID:       7bb87c84-6b06-44ef-9a1d-1bb9b9e57295
:END:
- methods
  - [[id:2bbeb644-af54-4f07-80ad-3584e1e21b04][single-cell RNA sequencing (scRNA-seq)]]
- cite:saloura2019 
- https://en.wikipedia.org/wiki/Immunological_Genome_Project#Gene-expression_compendium
*** cell enumeration through bulk RNA-seq
:PROPERTIES:
:CREATED:  [2020-08-05 Wed 08:36]
:END:
**** CIBERSORTx
    - raw counts will be converted to CPM in cibersortx- see https://cibersortx.stanford.edu/tutorial.php
- cibersortx
  - cite:newman2015
  - [[mu4e:msgid:BYAPR02MB5592ACF7A79C1137A6F0A974B77B0@BYAPR02MB5592.namprd02.prod.outlook.com][Re: cibersortx from docker]]
  - docker pull lyronctk/cibersortxfractions
- have access token for docker: https://cibersortx.stanford.edu/getoken.php
*** RNA-seq                                                          :career:
:LOGBOOK:
CLOCK: [2020-06-22 Mon 12:16]--[2020-06-22 Mon 12:43] =>  0:27
CLOCK: [2016-05-09 Mon 15:01]--[2016-05-09 Mon 15:27] =>  0:26
CLOCK: [2020-06-22 Mon 11:26]--[2020-06-22 Mon 11:43] =>  0:17
CLOCK: [2016-04-25 Mon 15:07]--[2016-04-25 Mon 15:19] =>  0:12
CLOCK: [2016-04-25 Mon 14:26]--[2016-04-25 Mon 14:56] =>  0:30
CLOCK: [2016-05-31 Tue 09:31]--[2016-05-31 Tue 10:24] =>  0:53
CLOCK: [2017-07-08 Sat 12:26]--[2017-07-08 Sat 12:29] =>  0:03
CLOCK: [2017-02-24 Fri 13:04]--[2017-02-24 Fri 14:09] =>  1:05
CLOCK: [2017-02-24 Fri 12:13]--[2017-02-24 Fri 13:00] =>  0:47
:END:
- http://bioinformatics.sdstate.edu/idep/
- cite:conesa2016
- experimental design
  - https://ucdavis-bioinformatics-training.github.io/2018-June-RNA-Seq-Workshop/tuesday/ExperimentalDesign.pdf
  - http://scotty.genetics.utah.edu/help.html
  - Depth
    - - determine directly using technical replicates
    - expression estimate correspondence among technical replicates (no biological variation) for genes with above-median coverage stabilized at about 10 million reads per sample (Wang et al. 2011).  
  - Replicates and power
    - sufficient replication has to occur at every level of comparison. In a fully "factorial" design, for example, more than one experimental "factor" is of interest, each with two or more treatments, such that any individual receives one of multiple possible treatments at each factor. In this case, every possible combination of treatments across factors needs to be replicated sufficiently,
    - biological variation is more important than technical variation- See Bullard,10 Evaluation of statistical methods for normalization and differential expression in mRNA-Seq experiments, fig. 4
    - adding depth vs. replicate- replicates preferred, gives less uncertainty 
    - remember, more comparisons require more replicates 
    - cite:schurch2016 
    - Power
      - https://cofactorgenomics.com/6-changes-thatll-make-big-difference-rna-seq-part-5/
      - cite:peixoto2015
      - the rewards in statistical power due to additional biological replicates will surpass the improved parameterization of technical variation garnered from additional technical replicates
      - low counts mean low power- see rna seqlopedia fig 1.1
    - [[http://scotty.genetics.utah.edu/help.html][Scotty]]
    - consider a "bank" of more sample replicates than are acutally sequenced 
  - By specific experimental question
    - Differential expression
      - [[http://rnaseq.uoregon.edu/#exp-design][RNA-seqlopedia]]
        - qualitative or quantitative (DE, ect.) design- usually quant
        - need bio replicates
        - stranded and paired library prep not required
  - Prefer “balanced block” design w/ barcode-> mixed prep-> all samples on all lanes
  - cite:auer2010
  - cite:williams2014
    - contains the 30-50 mil read for DE recommendation
  - Examples of experimental objectives
    - cite:Cabanski_2014 RNA sequencing (RNA-Seq) approaches are designed to characterize the expressed genome in numerous ways1,2 from defining different types of RNA, such as long non- coding RNAs,3 to comparing RNA expression,4 splice iso- forms,5e7 allele-specific expression,8e10 fusions,11e14 RNA editing,15,16 
  - sequencing platforms
    - cite:li2014
  - cite:su2014
  - cite:rajkumar2015
  - http://www.slideshare.net/YaoyuEWang/rnaseq-analysis-ngsapplication2
  - http://michelebusby.tumblr.com/post/26913184737/thinking-about-designing-rna-seq-experiments-to
  - Parameters affecting sequencing
    - Variance is bimodal
      - low @ low counts b/c Poisson
      - low @ high counts b/c?
    - biological
      - transcript abundence 10^5-10^7 see cite:Griffith_2015 refs 85,86
    - technical @ platform
      - specialized
        - On target efficiency with bedtools 
      - read length
      - read depth
      - strandedness problem[[file:org.org_imgs/20170224_132238_567aRU.png]]
    - Strandedness
      - cite:Zhao_2015
- extraction / isolation
  - DV200: % of fragments > 200 nucleotides, performed on bioanalyzer
  - cite:rabelo-goncalves2014
  - ffpe
    - cite:landolt2016 
  - cite:oneil2013
  - Input
    - Degraded
      - cite:Adiconis_2013
    - https://www.ncbi.nlm.nih.gov/pubmed/26842848
- library preparation
  - common kits
    - RNA exome 
    - pico
  - From input to library
    - cite:van_Dijk_2014
    - By workflow
      - Isolation
      - Enrichment
        - Methods
          - Hybridization
            - For selection of targets
              - via oligo-dT
                - will include some mitochondial 
            - For removal of non-targets
              - rRNA depletion- rely on specific oligo set, d/n work well if rRNA is degraded 
          - Size-selection enrichment- for ncRNA
          - DSN (duplex-specific nuclease digestion)- @ cDNA level, allow abundant transcripts to renature and are degraded by duplex-specific nuclease 
      - Fragmentation- RNase III, metal ion, heat, or sonication
      - Library preparation
        - FFPE
          - However, formalin treatment degrades RNA through cross-linking and fragmentation, which significantly impairs molecular analyses (Bass et al., 2014; Farragher et al., 2008; Klopfleisch et al., 2011). T
          - check webster 15 cites- (Auerbach et al., 2014; Hedegaard et al., 2014; Linton et al., 2012; Spencer et al., 2013; Zhao et al., 2014b). 
        - [[http://support.illumina.com/content/dam/illumina-support/courses/truseq-rna-access/story.html?iframe?iframe][TruSeq: RNA Access Library Prep]]
        - [[http://support.illumina.com/content/dam/illumina-support/courses/TruSeq_Sample_Prep_Best_Practices/index.html?iframe?iframe][TruSeq Sample Preparation Best Practices]]
        - First-strand synthesis
          - Priming options
            - oligo-dT
            - "random" hex
        - Second-strand synthesis
          - Also requires a primer
          - Usually via RNA displacement- RNase H and T4 ligase 
        - cDNA fragmentation
          - accounting for fragment bias- https://genomebiology.biomedcentral.com/articles/10.1186/gb-2011-12-3-r22
        - Sequencing adaptors
          - Y-adaptor PCR: blunt cDNA ends, add adenosine overhangs
- raw sequence processing
  - adapter trimming
    - https://www.ecseq.com/support/ngs/trimming-adapter-sequences-is-it-necessary
    - https://www.biostars.org/p/267388/
    - http://seqanswers.com/forums/showthread.php?t=51226
    - https://github.com/griffithlab/rnaseq_tutorial/wiki/Adapter-Trim
    - do all aligners need adaptor trimming? at least common to do so for all
    - https://www.biostars.org/p/368420/
  - https://www.slideshare.net/joachimjacob/2rna-seqpart2investigatin-rawdata
  - https://www.michaelchimenti.com/2016/06/trim-rna-seq-reads/
  - Trimming
    - Adaptor
    - Quality
- alignment
  - https://davetang.org/muse/2017/10/25/getting-started-hisat-stringtie-ballgown/
  - prerequisites
    - adaptor identification and trimming
  - pseudoaligner
    - kallisto
    - Salmon
  - Aligners
    - TopHat2
    - Specialized aligners
      - Fusions
        - TopHat Fusion
          - tophat fusion documentation http://ccb.jhu.edu/software/tophat/fusion_manual.html 
        - STAR for chimeric reads / STAR-Fusion
          - [[https://github.com/STAR-Fusion/STAR-Fusion/wiki][website]]
          - From cite:star_2.5_dobin Chapter 5
          - From cite:dobin2015mapping Alternate Protocol 6
            - --chimSegmentMin <N> is minimum allowed length for each of the chimeric segments
          - additional outputs are
            - Chimeric.out.sam
            - Chimeric.out.junction- a STAR-specific format
      - To transcriptome
        - 
  - HISAT2
- read annotation
  - https://github.com/griffithlab/rnaseq_tutorial/wiki/Annotation
- time course
  - cite:spies2017
  - https://support.bioconductor.org/p/65676/#66860
  - https://www.biostars.org/p/138988/
  - https://bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#group-specific-condition-effects-individuals-nested-within-groups
  - https://hbctraining.github.io/DGE_workshop/lessons/08_DGE_LRT.html
  - http://seqanswers.com/forums/showthread.php?t=64039
  - https://www.sciencedirect.com/science/article/pii/S2001037015000392
- deconvolution
  - tools
    - ISOpure
      - https://link.springer.com/article/10.1186/s12859-015-0597-x#Sec1
  - cite:newman2015 
- specialized applications
  - extracellular
    - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5426982/
  - stranded
    - https://www.ecseq.com/support/ngs/how-do-strand-specific-sequencing-protocols-work
  - ffpe
    - cite:kashofer2013 
    - FFPE Pre-analytic variability
      - cite:ahlfen2007rnaqual
        - storage conditions
        - cold ischemia time
        - fixation
          - type
          - time
        - sample thickness
      - biospecimens.cancer.gov/researchnetwork 
      - cite:unlockingQiagen
      - https://www.ncbi.nlm.nih.gov/pubmed/25357115
      - By effect
        - Yield
          - - prolonged fix reduces yield- Bresters D, Schipper ME, Reesink HW, Boeser-Nunnink BD, Cuypers HT. The duration of fixation influences the yield of HCV cDNA-PCR products from formalin-fixed, paraffin- embedded liver tissue. J Virol Methods 1994;48:267–72.
          - cite:webster2015mining longer fixation times decrease RNA yields from paraffin-embedded tissues (herein 3 weeks in formalin resulted in half the RNA yield/sec- tion compared with 18 h) and increase RNA input needed during library preparation (see methods). This latter effect is likely due to ‘non-functional’ RNA (eg, adducts or damaged bases) that could be potentially mitigated by treatments like PreCR or other enzymatic and chemical methods. 
        - At microarray expression
          - cite:kashofer2013quality
      - "Formalin fixation introduced major changes into microarray gene expression data and led to marked gene-to-gene variations in delta-ct values of qRT-PCR. We found that qRT-PCR efficiency and gene-to- gene variations were mainly attributed to differences in the efficiency of cDNA synthesis as the most sensitive step. These differences could not be reliably detected by quality assessment of total RNA isolated from formalin-fixed tissues by electrophoresis or spectrophotometry. "
      - At sequencing
    - cite:graw2015 
    - Past expression tech
      - goals were biomarker discovery and patient stratification
      - cite:Zhao_2014 manifests its superiority in terms of the dynamic range, sampling depth, and has independence from pre-existing sequence information [1,2].
      - cite:webster2015mining When compared with conventional DNA microarrays, RNA-seq enriches for many additional fragments as it is not restricted to predefined probes and has (in principle) no limitations to dynamic range (Li et al., 2014b; SEQC/MAQC-III Consortium, 2014). 
      - - https://www.ncbi.nlm.nih.gov/pubmed/14695316
      - - [[https://www.ncbi.nlm.nih.gov/pubmed/15509548][DASL]]
      - https://www.ncbi.nlm.nih.gov/pubmed/21347257
    - FFPE microarray and RT-PCR was useful
      - AlloMap is a non-invasive gene expression-based blood test that is used to manage the clinical care of heart transplant recipients, providing a quantified score for the risk of rejection based on the measurement of expression of 20 genes, a subset of which are related to immune system activation and signalling15,16.
      - - cite:penland2007rna
      - - - https://www.ncbi.nlm.nih.gov/pubmed/11568892/
      - Mittempergher, L., de Ronde, J.J., Nieuwland, M., Kerkhoven, R.M., Simon, I., Th Rutgers, E.J., Wessels, L.F., Van't Veer, L.J., 2011. Gene expression profiles from formalin fixed paraffin embedded breast cancer tissue are largely comparable to fresh fro- zen matched tissue. PLoS One 6, e17163.
    - But this expression tech is inferior
      - In other work14, systematic evalu- ation of RNA-seq-based and microarray-based classifiers found that RNA-seq outperformed arrays in characteriz- ing the transcriptome of cancer and performed similarly to arrays in clinical endpoint prediction.
      - does not depend on genome annotation, or on predesigned species-specific or tran- script-specific probes, for transcript measurement.
      - microarray limited application to clinic- lthough powerful, microarray-based assays can have limitations in some environments, such as those related to laboratory-to-laboratory variation in sample preparation that can affect reproducibility. Moreover, for some applications, microarray signal-to-noise ratios can affect the limit of detection. Interestingly, a number of additional cancer multi-gene profile tests are clinically available, such as OncoTypeDX (Genome Health)135 for breast cancer recurrence risk and Prolaris (Myriad)136 for prostate cancer aggressiveness. These tests are based on qRT-PCR technologies, rather than microarrays, largely owing to the belief that qRT-PCR is more reliable, reproducible, sensitive and accurate.
      - " qRT-PCR is generally deemed the ‘gold standard’ method for measuring transcript levels, particularly in the clinical space; however, there are a number of limitations, including the fact that although it is a high sample throughput technology, relatively few markers or measurements can be made in a single assay. "
      - rnaseq superior for
        - snvs
        - indels
        - isoforms
        - splice vars
        - chimerics
          - fusions
      - semiquan
      - no SNV discovery
      - no fusion
      - "RNA-seq provides much more detailed information on specific transcript expression patterns in clinico-genetic neuroblastoma subgroups than microarrays. " cite:zhang2015comparison
  - small RNA sequencing
    - sample processing
      - circulating miRNA stability
        - serum cite:gautam2016
        - plasma  cite:glinge2017
    - library preparation
      - with low input, use same kit for reproducibility cite:yeri2018 
      - cite:dard-dascot2018
    - https://rnajournal.cshlp.org/content/18/6/1279.long
    - qc
      - https://www.agilent.com/en/product/automated-electrophoresis/bioanalyzer-systems/bioanalyzer-rna-kits-reagents/bioanalyzer-small-rna-analysis-228257#howitworks
  - single cell
    - https://www.biorxiv.org/content/biorxiv/early/2019/02/05/541433.full.pdf
    - examples
      - - see fig 3 & methods https://genome.cshlp.org/content/27/2/208.full.pdf
    - https://www.nature.com/articles/s41587-020-0553-9
    - 10x
      - applications - https://pages.10xgenomics.com/nur-gen-research-area-literature.html?src=email&utm_medium=email&lss=nurture&utm_source=nurture&cnm=es-nurture-ra_g-general&utm_campaign=es-nurture-ra_g-general&utm_content=&utm_term=&useroffertype=marketing-literature&userresearcharea=ra_g&userregion=&userrecipient=customer&mktouserid=1265915&cid=&usercampaignid=
    - https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0212031
    - http://www.nature.com/nbt/journal/v34/n2/full/nbt.3445.html
  - Clinical applications of RNA-seq
    - cite:byron2016translating
    - cite:Kalari_2014
    - cite:Van_Keuren_Jensen_2014
**** visualization
- examples
  - [[https://www.cell.com/cell-reports/pdf/S2211-1247(20)30669-0.pdf][good seq analysis and visual example]]
- volcano
  - https://www.biostars.org/p/203876/
- heatmaps
  - http://compbio.ucsd.edu/making-heat-maps-r/
  - https://www.rdocumentation.org/packages/gplots/versions/3.0.3/topics/heatmap.2 
- mapped reads were visualized by SeqMonk[[file:org.org_imgs/20161220_180037_4849srR.png]]
**** exosome and exRNA small and miRNA-seq from blood plasma
:PROPERTIES:
:ID:       729030d7-90ce-485a-a690-0ce8313391a2
:END:
- [[id:80cff175-c41d-42d4-aaa0-39546e0a6f1d][plasma exRNA isolation]]
- [[id:ac5261a8-ea3c-44d3-bfd9-c3e1f2ac1e09][assaying circulating small and miRNA]]
- full protocols
  - cite:max2018 - see appendix for detailed protocol https://www.pnas.org/content/suppl/2018/05/17/1714397115.DCSupplemental
- library prep
  - cite:wong2019 
- sequencing
  - what depth? https://www.researchgate.net/post/how_many_million_reads_for_miRNA_discovery
- plasma exosomes
  - [[https://mail.google.com/mail/u/0/#inbox/FMfcgxwJWXSsbJRjMvKctpBfhsJkPqbc][[2020-06-23] email Arlise Andress plasma exosome processing]]
**** general guides, github repos, training, etc
- general resources- https://github.com/crazyhottommy/RNA-seq-analysis
- https://rnaseq.uoregon.edu/
- https://www.labome.com/method/RNA-seq.html
- http://mikelove.github.io/
- cite:dundar2018
- https://www.biostat.wisc.edu/bmi776/lectures/rnaseq.pdf
- https://github.com/crazyhottommy/RNA-seq-analysis
- https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6096346/
- best practices
 - cite:conesa2016 
 - https://www.reddit.com/r/bioinformatics/comments/eahwak/an_update_on_rnaseq_differential_expression/
- cite:karow2017
- https://hub.docker.com/r/mgibio/rnaseq/dockerfile
- http://rseqc.sourceforge.net/
- cite:korpelainen2015
- cite:griffith2015
- https://www.rna-seqblog.com/blog/
- https://github.com/genome/gms/wiki/RnaSeq
- https://bioinformatics-core-shared-training.github.io/RNAseq_September_2018/slides/DAY_1.pdf
- standards and best practices
 - [[http://gatkforums.broadinstitute.org/gatk/discussion/4067/best-practices-for-variant-discovery-in-rnaseq][Broad best practices for variant discovery in RNA Seq]]
 - ENCODE RNA-Seq guidelines
 - [[http://www.fda.gov/ScienceResearch/BioinformaticsTools/MicroarrayQualityControlProject/][Sequencing Quality Control Project (SEQC)]]
   - [ ] [[http://www.ncbi.nlm.nih.gov/pubmed/?term=SEQC+sequencing+quality+control+project][pubmed: SEQC sequencing quality control project- 8 hits]]
     - cite:xu2016fda
       - SEQC Major Findings: 
         - Relative measurement is more consistent & reproducible than absolute
         - Comparison w/ microarry
           - 75% concordance for highly expressed, 35% for lowly expressed (w/ RNA-seq better at low via PCR)
         - Pipelines
           - Analyzed 12 pipelines, 278 permutations
           - Assessment is coming in Nature Methods
       - cite:Zheng_2015
       - cite:seqc2014comprehensive
- https://ycl6.gitbooks.io/rna-seq-data-analysis/rna-seq_analysis_workflow.html
- SEQC
 - cite:Li_2014
 - cite:seqc2014comprehensive
- genomeweb: [[file:~/Box%20Sync/career/Optimizing%20Whole-Transcriptome%20RNA-Seq%20with%20Improved%20Library%20Prep%20and%20Data%20Analysis-20170316%201700-1.arf][optimizing whole genome RNA seq]]
- [[https://blog.sbgenomics.com/rna-seq-the-first-wave/][RNA-seq: The first wave of papers]]
- cite:conesa2016
- cite:poplawski2015
- pipelines 
 - cite:kalari2014
 - [[https://hub.docker.com/r/mgibio/rnaseq/dockerfile][mgi rna-seq dockerfile]]
- cite:fonseca2014
- cite:wilhelm2009
***** Training
:PROPERTIES:
:ID:       10F920C2-3B28-4FC0-A91A-02F7229F2619
:END:

- - Garbe RNA-seq tutorial 1
- [[https://www.youtube.com/watch?v=hksQlJLwKqo][NYU Langone RNAseq workshop]]

****** Griffith AWS RNA-seq Tutorial
:PROPERTIES:
:ID:       520695E3-F98F-4195-8336-0A0E9589FB14
:END:
:LOGBOOK:
CLOCK: [2017-08-11 Fri 10:41]--[2017-08-11 Fri 11:17] =>  0:36
CLOCK: [2017-07-08 Sat 13:35]--[2017-07-08 Sat 14:20] =>  0:45
CLOCK: [2017-07-08 Sat 12:29]--[2017-07-08 Sat 12:33] =>  0:04
CLOCK: [2017-02-28 Tue 11:42]--[2017-02-28 Tue 11:44] =>  0:02
CLOCK: [2017-03-01 Wed 14:47]--[2017-03-01 Wed 14:55] =>  0:08
CLOCK: [2017-02-28 Tue 11:44]--[2017-02-28 Tue 11:54] =>  0:10
:END:
- [[https://us-west-2.console.aws.amazon.com/console/home?region=us-west-2#][my AWS]]
- [[https://bioinformatics.ca/workshops/2014/informatics-rna-sequence-analysis-qc-2014#material][videos on bioinformatics.ca]]
  - Module 1: Intro resume at 30 min 
    - RNA abundance 10^5 - 10^7
    - large genes have polyA selection bias
  - Module 2: RNA-seq alignment and visualization
  - Module 3: Expression and Differential Expression
  - Module 4: Isoform discovery and alternative expression 
- [ ] waiting on account confirmation
- [X] waiting to resolve AWS issue- https://console.aws.amazon.com/support/home?region=us-west-2#/case/?displayId=2093164191&language=en
- cite:Griffith_2015
  - Introduction to RNA Sequencing
    - accuracy = PCR see refs 1-2
    - workflow- isolation, enrichment, cDNA, fragmentation, sequencing, sequence preprocessing, alignment or assembly, adundance estimation, expression analysis, visualzation
    - downstream analysis
      - transcript discovery
      - genome annotation
      - gene regulation
      - expression analysis 
        - differential expression
        - allele-specific expression
      - RNA editing
      - viral detection
      - variant detection
        - gene fusion detection
    - clinical applications- redf 42, 43
    - limitations
      - single time-point steady state data
      - RNA expression may not correlate to protein expression- ref 46, 47
  - RNA Isolation, Library Preparation, and Sequencing Strategy
    - enrichment
      - total RNA
      - polyA enrichment
      - rRNA reduction
      - cDNA capture
    - size selection
    - use of linear amp
    - platform choice
    - reads- single vs. paired
  - Cloud Computing for RNA-Seq Analysis and Education- advantages
    - consistency
    - elasticity
    - multiple machine instances
  - RNA-Seq Data Formats, Qualty Contol, Trimming, Alignment, and Visualization
    - common file formats
      - FASTA
      - GTF
      - FASTQ
      - SAM/BAM
      - CIGAR
    - initial QC
      - k-mer-based 
        - adaptor contamination
        - rRNA contamination
        - short reads
      - base quality
      - ambiguous bases
      - read trimming
        - strategies
          - adaptor trimming
          - quality trimming
        - tools
          - skewer ref 57
          - trimmomatic ref 58
    - alignment or assembly
      - assembly- merging reads into contigs based on sequence similarity 
    - post-alignment QC
  - Expression and Differential Expression
    - biases affecting count based
      - gene or transcript size
      - CG bias
    - common analysis downstream of expression
      - classifying
        - Weka
        - RandomForests R package
      - pathway and gene set analysis
        - SeqGSEA
        - GAGE
        - PAthView
        - GoSeq
        - GSAASeqSP
        - Cytoscape
  - Isoform Discovery and Alternative Expression
    - dependent on correct inference of full-length transcripts from short reads
    - may be able to infer strand origin from splice site spanning reads
  - Challenges Specific to RNA-Seq
  - Conclusions and Future Work 
- [[http://www.rnaseq.wiki][Informatics for RNA-seq: A web resource for analysis on the cloud]] 
  - [[https://github.com/griffithlab/rnaseq_tutorial][github]]
  - Module 0 - Introduction and Cloud Computing
    - Authors
    - Citation and Supplementary Materials
    - Syntax
    - [[https://github.com/griffithlab/rnaseq_tutorial/wiki/Intro-to-AWS-Cloud-Computing][Intro to AWS Cloud Computing]]
      - Preamble
      - Acknowledgements
      - Glossary and abbreviations
      - What do I need to perform this tutorial
        - Creating an account
        - Logging into the AWS console
      - What is a Region?
      - How much does it cost to use AWS EC2 resources?
        - How does billing work?
      - Necessary steps for launching an instance
        - Step 1. Choosing an AMI
        - Step 2. Choosing an instance type
        - Step 3. Configuring instance details
        - Step 4. Adding storage
        - Storage volume options
        - Step 5. Tagging the instance
        - Step 6. Configuring a security group
        - Step 7. Reviewing the instance before launch
        - Step 8. Assigning a key pair
        - Step 9. Reviewing launch status
        - Step 10. Examining a new instance in the ec2 console
        - Step 11. Logging into an instance
      - Trouble-shooting and advanced topics
        - Can not login to EC2 instance - what might have gone wrong?
        - How do storage volumes appear within a linux instance on amazon EC2?
        - Taking stock of compute resources within an ubuntu linux instance
        - Basic setup and administration of an ubuntu linux instance
        - Setting up an Apache web server
        - What is difference between the start, stop, reboot and terminate instance states?
        - How do I create my own AMI, publish as a Community AMI, and what is a snapshot?
        - Tidying up and shutting down AWS resources
        - Further reading and preparing for more advanced AWS cloud computing concepts
    - Logging into Amazon Cloud
    - Unix Bootcamp
    - Environment
    - Resources
  - Module 1 - Introduction to RNA sequencing
    - Installation
    - Reference Genomes
    - Annotations
    - Indexing
    - RNA-seq Data
    - PreAlignment QC
  - Module 2 - RNA-seq Alignment and Visualization
    - Adapter Trim
    - Alignment
    - IGV
    - Alignment Visualization
    - Alignment QC
  - Module 3 - Expression and Differential Expression
    - Expression
    - Differential Expression
    - DE Visualization
    - Kallisto for Reference-Free Abundance Estimation
  - Module 4 - Isoform Discovery and Alternative Expression
    - Reference Guided Transcript Assembly
    - de novo Transcript Assembly
    - Transcript Assembly Merge
    - Differential Splicing
    - Splicing Visualization
  - Module 5 - De novo transcript reconstruction
    - De novo RNA-Seq Assembly and Analysis Using Trinity
  - Module 6 - Functional Annotation of Transcripts
    - Functional Annotation of Assembled Transcripts Using Trinotate
  - Appendix
    - Saving Results
    - Abbreviations
    - Lectures
    - Practical Exercise Solutions
    - Integrated Assignment
    - Proposed Improvements
    - AWS Setup

**** co-expression 
  - pathway enrichment
    - - https://bioconductor.org/packages/release/bioc/vignettes/gage/inst/doc/RNA-seqWorkflow.pdf
    - - https://www.nature.com/articles/s41596-018-0103-9.pdf?proof=true19
    - https://bioconductor.org/packages/release/bioc/vignettes/ReactomePA/inst/doc/ReactomePA.html
  - https://bioconductor.org/packages/release/bioc/vignettes/pathview/inst/doc/pathview.pdf
  - gscna
    - cite:rahmatallah2014
  - wgcna
    - https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-02-networkConstr-man.pdf
    - cite:vanDam2018 
      #+begin_src bash 
    mkdir -p /tmp/wgnca-example
    cd /tmp/wgnca-example/
    wget https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-Data.zip
    unzip FemaleLiver-Data.zip
    #+end_src
      #+begin_src R 
setwd("/tmp/wgnca-example")
source("~/repos/basecamp/bin/setup.R")
#
# ez install of wgcna and dependencies for R 3.6
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
BiocManager::install("fastLiquidAssociation")
#
library(WGCNA)
options(stringsAsFactors=F)
femData=read.csv("./LiverFemale3600.csv")
datExpr0=as.data.frame(t(femData[,-c(1:8)]))
head(datExpr0)
gsg=goodSamplesGenes(datExpr0, verbose=3)
gsg$allOK
if (!gsg$allOK)
{
# Optionally, print the gene and sample names that were removed:
if (sum(!gsg$goodGenes)>0)
printFlush(paste("Removing genes:", paste(names(datExpr0)[!gsg$goodGenes], collapse = ", ")));
if (sum(!gsg$goodSamples)>0)
printFlush(paste("Removing samples:", paste(rownames(datExpr0)[!gsg$goodSamples], collapse = ", ")));
# Remove the offending genes and samples from the data:
datExpr0 = datExpr0[gsg$goodSamples, gsg$goodGenes]
}
#
sampleTree=hclust(dist(datExpr0),method="average")
plot(sampleTree)
#
# Plot a line to show the cut
abline(h = 15, col = "red");
# Determine cluster under the line
clust = cutreeStatic(sampleTree, cutHeight = 15, minSize = 10)
table(clust)
# clust 1 contains the samples we want to keep.
keepSamples = (clust==1)
datExpr = datExpr0[keepSamples, ]
nGenes = ncol(datExpr)
nSamples = nrow(datExpr)
#
traitData = read.csv("ClinicalTraits.csv")
dim(traitData)
names(traitData)
# remove columns that hold information we do not need.
allTraits = traitData[, -c(31, 16)]
allTraits = allTraits[, c(2, 11:36) ]
dim(allTraits)
names(allTraits)
# Form a data frame analogous to expression data that will hold the clinical traits.
femaleSamples = rownames(datExpr)
traitRows = match(femaleSamples, allTraits$Mice)
datTraits = allTraits[traitRows, -1]
rownames(datTraits) = allTraits[traitRows, 1]
collectGarbage()
#
save(datExpr, datTraits, file = "FemaleLiver-01-dataInput.RData")
#
enableWGCNAThreads()
lnames=load(file="FemaleLiver-01-dataInput.RData")
#
lnames
    #+end_src
  - gene set enrichment
    - https://genviz.org/module-04-expression/0004/03/01/pathwayAnalysis/
    - https://www.bioconductor.org/packages/devel/data/experiment/manuals/gageData/man/gageData.pdf
    - https://bioconductor.org/packages/release/bioc/vignettes/gage/inst/doc/RNA-seqWorkflow.pdf
    - http://amp.pharm.mssm.edu/Enrichr/help#basics
    - https://monashbioinformaticsplatform.github.io/RNAseq-DE-analysis-with-R/RNAseq_DE_analysis_with_R.html#gene-set-enrichment
    - http://software.broadinstitute.org/gsea/msigdb/collections.jsp
    - https://monashbioinformaticsplatform.github.io/RNAseq-DE-analysis-with-R/RNAseq_DE_analysis_with_R.html#gene-set-enrichment
  - gsea
    - cite:rahmatallah2016
    - cite:amadoz2019
    - https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/
    - https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-9-559
***** GSEA
:PROPERTIES:
:ID:       D68E1182-1F7B-4160-A6DD-BD2635F8085F
:END:

https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btu090
https://academic.oup.com/bioinformatics/article-lookup/doi/10.1093/bioinformatics/btt285
http://genomebiology.biomedcentral.com/articles/10.1186/gb-2010-11-2-r14
http://www.nature.com/articles/srep06347

**** variants
:PROPERTIES:
:CREATED:  [2020-06-22 Mon 12:27]
:END:
***** fusions
  - cite:melsted2017  
****** Gene Fusion Detection
:PROPERTIES:
:ID:       778C7C81-34E7-4BAE-94F9-5C33318BFDA5
:END:

- cite:latysheva2016
- [[https://bioconductor.org/packages/release/bioc/vignettes/chimeraviz/inst/doc/chimeraviz-vignette.html#introduction][chimeraviz]]
  - [[https://github.com/stianlagstad/chimeraviz][githu]]b
  - [[https://github.com/stianlagstad/chimeraviz/issues/47][Request for support for importing other fusion calls #47]]
  - [[https://github.com/stianlagstad/chimeraviz/blob/master/R/import_ericscript.R][import_ericscript.R]]
  - [[https://github.com/stianlagstad/chimeraviz/blob/master/R/import_defuse.R][import defuse.R]]
- Visualization tools for fusions
  - [[https://www.biostars.org/p/63626/][biostars post discussing]]
  - INSTALLED! [[file:~/Box%20Sync/org/org.org::svviz][svviz]] recommended by Griffith
  - [[http://pairoscope.sourceforge.net/#Installation][pairoscope]]- hard to install outside of linux
    - http://pairoscope.sourceforge.net/

***** RNA-seq Variant Pipeline
:PROPERTIES:
:ID:       152655AC-9785-42FB-B3EE-58F55BF316E5
:END:

**** differential expression
 https://chanzuckerberg.github.io/scRNA-python-workshop/analysis/05-diffexp.html
  http://www.nature.com/nmeth/journal/v7/n10/full/nmeth.1503.html
  - https://www.bioconductor.org/packages/devel/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow.html#differential-expression-analysis
  - https://www.bioconductor.org/packages/devel/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow.html
  - https://europepmc.org/article/PMC/6058388
  - cite:tang2015 
  - http://master.bioconductor.org/packages/release/workflows/html/rnaseqGene.html
  - https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#multi-factor-designs
  - https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-015-0794-7
  - https://nbisweden.github.io/course_rnaseq/presentations/presentation_dge.html#1
  - https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#multi-factor-designs
  - https://www.nature.com/articles/s41598-020-59516-z#data-availability
  - https://www.biostars.org/p/101727/
  - methods
    - limma
      - https://www.rdocumentation.org/packages/limma/versions/3.28.14/topics/decideTests
      - https://www.rdocumentation.org/packages/limma/versions/3.28.14/topics/ebayes
      - https://www.rdocumentation.org/packages/limma/versions/3.28.14/topics/toptable
    - comparison
      - https://academic.oup.com/bib/article/16/1/59/240754#26957696
    - DESeq2
      - [[https://bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#differential-expression-analysis][package vignette]]
      - handling nested designs https://support.bioconductor.org/p/64480/
      - https://genviz.org/module-04-expression/0004/02/01/DifferentialExpression/
      - https://bioc.ism.ac.jp/packages/2.14/bioc/vignettes/DESeq2/inst/doc/beginner.pdf
  - cite:parekh2016
  - https://www.the-scientist.com/news-opinion/technical-bias-widespread-in-rna-seq-datasets-66766?utm_campaign=TS_DAILY%20NEWSLETTER_2019&utm_source=hs_email&utm_medium=email&utm_content=79783848&_hsenc=p2ANqtz-_TvsXNNQSHgNWR9yE8Q6vZP04TRSx3T-W0rLk0NLucSkrSI0wQ0GDQ2L1Vs_Jf1x1_21ou8yVG1ur9nXtXbBYl91OsUg&_hsmi=79783848
  - bulk transcriptomics
    - 
  - https://bioconductor.org/packages/devel/workflows/vignettes/RNAseq123/inst/doc/limmaWorkflow.html#useful-graphical-representations-of-differential-expression-results
  - DESeq2
  - edgeR
  - limma
***** RNA-seq Differential Expression (DE)
:PROPERTIES:
:ID:       1D9250F7-195F-43E1-B095-8EC8640EC16E
:END:

https://pmbio.org/module-06-rnaseq/0006/02/01/RNAseq_Expression/
count based vs. cuffdiff- cuffdiff
[[file:~/Box%20Sync/library/Seyednasrollah,15%20Comparison%20of%20software%20packages%20for%20detecting%20differential%20expression%20in%20RNA%20seq.pdf][Seyednasrollah,15 Comparison of software packages for detecting differential expression in RNA seq]]

Nobel,09 How does multiple correction testing work? 

[[file:~/Box%20Sync/library/Anders,10%20Differential%20expression%20analysis%20for%20sequence%20count%20data.pdf][Anders,10 Differential expression analysis for sequence count data]]

[[file:~/Box%20Sync/library/Tarazona,15%20Data%20quality%20aware%20analysis%20of%20differential%20expression%20in%20RNA%20seq%20with%20NOISeq%20R%20package.pdf][Tarazona,15 Data quality aware analysis of differential expression in RNA seq with NOISeq R package]]

[[file:~/Box%20Sync/library/Peixoto,15%20How%20data%20analysis%20affects%20power,%20reproducibility,%20and%20biological%20insight%20of%20RNA%20seq%20studies.pdf][Peixoto,15 How data analysis affects power, reproducibility, and biological insight of RNA seq studies]]

[[file:~/Box%20Sync/library/McCarthy,12%20Differential%20expression%20analysis%20of%20multifactor%20RNA%20seq%20experiments%20with%20respect%20to%20biological%20variation.pdf][McCarthy,12 Differential expression analysis of multifactor RNA seq experiments with respect to biological variation]]

[[file:~/Box%20Sync/library/Mi,15%20The%20level%20of%20residual%20dispersion%20variation%20and%20the%20power%20of%20differential%20expression%20tests%20for%20RNA%20seq%20data.PDF][Mi,15 The level of residual dispersion variation and the power of differential expression tests for RNA seq data]]

[[file:~/Box%20Sync/library/Huang,15%20Differential%20expression%20analysis%20for%20RNA%20seq%20an%20overview%20of%20statstical%20methods%20and%20computational%20software.pdf][Huang,15 Differential expression analysis for RNA seq an overview of statstical methods and computational software]]

  - Anders,13
    - note that the transcript level is different than either gene or exon
    - for a presentation- is this all descriptive? where is the hypothesis testing? 
    - while 2-3 replicates is sufficient for designed studies, dozens or hundreds are needed for observationals 
    - metadata table- sample IDs, exp conditions, file names, etc. 
    - design matrix- specifies factors expected to affect expression levels 
    [[http://gatkforums.broadinstitute.org/gatk/discussion/4067/best-practices-for-variant-discovery-in-rnaseq][GATK best practices for variant discovery]]
  - FDR 

****** Tools
:PROPERTIES:
:ID:       68BB9D3D-5879-4F2E-904B-54F70EAD2B5A
:END:

  - DESeq2
    - negative binomial GLM
  - EdgeR
    - GLM asking whether exons are used proportionally across experiment conditions
    - DEXSeq is an extension to exons
  - limma
  - Bayesian
    - BaySeq
    - BitSeq
    - ebSeq
  - count-based
    - negative binomial
      - DESeq2
      - edgeR
  - CuffDiff- isoform count-based
  - 
  - Non-parametrics- require 5-10 replicates per group
    - SAMSeq
    - NOISeq
    [[file:~/Box%20Sync/library/Love,14%20Moderated%20estimation%20of%20fold%20change%20and%20dispersion%20for%20RNA%20seq%20data%20with%20DESeq2.pdf][Love,14 Moderated estimation of fold change and dispersion for RNA seq data with DESeq2]]

****** DESeq2
:PROPERTIES:
:ID:       2F642F69-A9C8-46DA-BE31-783AC8D4F4B6
:END:

  - a negative binomial GLM 
  - import functions
    | function          | package           | framework | output               | DESeq2 input function    |
    | summarizeOverlaps | GenomicAlignments | R         | SummarizedExperiment | DESeqDataSet             |
    | featureCounts     | Rsubread          | R         | matrix               | DESeqDataSetFromMatrix   |
    | tximport          | tximport          | R         | list of matrices     | DESeqDataSetFromTximport |
    | htseq-count       | HTSeq             | Python    | files                | DESeqDataSetFromHTSeq    |
    http://www.nathalievilla.org/doc/html/solution-DESeq2-rnaseq.html
    Global Expression Differences- learn spearman 

****** limma voom
:PROPERTIES:
:ID:       F9684168-A438-4F5E-81D6-D645B52B4074
:END:

[[file:~/Box%20Sync/comp_bio/RNA-seq/Ritchie,15%20limma%20powers%20differential%20expression%20analysis%20for%20RNA%20sequencing%20and%20microarray%20results.pdf][Ritchie,15 limma powers differential expression analysis for RNA sequencing and microarray results]]
:LOGBOOK:  
CLOCK: [2016-05-09 Mon 12:24]--[2016-05-09 Mon 12:25] =>  0:01
:END:      
- raw counts transformed to continuous values w/ confidence weight
- [[file:~/Box%20Sync/comp_bio/RNA-seq/limma%20Manual.pdf][manual]]

- Math, concept- [[file:~/Box%20Sync/comp_bio/RNA-seq/Law,14%20voom%20precision%20weights%20unlock%20linear%20model%20analysis%20tools%20for%20RNA%20seq.pdf][Law,14 voom precision weights unlock linear model analysis tools for RNA seq]]
- voom transformation- from counts to log-counts per million w/ associated weight (just think of it as if microarray data)

******* [[file:~/Box%20Sync/comp_bio/RNA-seq/limma%20User%20Guide.pdf][User Guide]]
:PROPERTIES:
:ID:       15C1AE68-19D2-4FBD-B51E-DA37C605F0D7
:END:

- concepts
  - borrows information across genes for emperical Bayes
  - read counts -> continuous expression data like microarray
  - required matrices for linear models approach
    - design- which RNA to which sample (i.e. specify groups)
    - contrast- which group comparions to make

******* [[file:~/Box%20Sync/comp_bio/limma_voom_template/][Examples and Template]]
:PROPERTIES:
:ID:       D1B28C0A-9AAD-4245-BE85-61300CE4A02B
:END:

******** WEHI example ([[file:~/Box%20Sync/comp_bio/RNA-seq/wehi_limma_example/wehi_limma_example.Rproj][Rproject]], [[file:~/Box%20Sync/comp_bio/RNA-seq/wehi_limma_example/wehi_limma_example.R][Rscript]]), [[http://bioinf.wehi.edu.au/RNAseqCaseStudy/][link]]
:PROPERTIES:
:ID:       1E96E985-8BD2-4D8F-AC88-FB509B99F513
:END:
:LOGBOOK:  
CLOCK: [2016-05-10 Tue 15:46]--[2016-05-10 Tue 16:05] =>  0:19
CLOCK: [2016-05-10 Tue 15:07]--[2016-05-10 Tue 15:20] =>  0:13
CLOCK: [2016-05-09 Mon 12:25]--[2016-05-09 Mon 13:13] =>  0:48
:END:      

******** User Guide Chapter 18
:PROPERTIES:
:ID:       817998EF-31AD-4A22-BF91-ACF72A1C29E5
:END:

********* 18.1 [[file:~/Box%20Sync/comp_bio/limma_voom_template/yoruba_hapmap/][Profiles of Yoruba HapMap]]
:PROPERTIES:
:ID:       1E8CAB25-19C2-4745-B157-FA46D84549CD
:END:

********** DONE Read
CLOSED: [2016-06-30 Thu 11:22]
:PROPERTIES:
:ID:       91CBDFB8-17EB-4F2D-B2A4-58F656C64332
:END:

********** Work through code
:PROPERTIES:
:ID:       05EC5C9D-CE60-4DD5-9F5D-6EED8C229478
:END:

Venn diagrams with limma]]

Another use of the voom plot-  what you are failing to do completely in the voom analysis is to remove the rows of your count matrix that are lowly expressed, because these hose the mean/variance estimation, which you can see/diagnose on the plot generated with you call to voom(..., plot=TRUE). In brief, you want to ensure that the red fit line doesn't "slope/hook back down" (I'm talking as if you are "reading" the graph from right to left here) due to the drop/discretization in the observed variance from the black dots on the left side of the plot.

[[https://www.biostars.org/p/131488/][subsetting from topTable]]

****** RNA Expression Patterns
:PROPERTIES:
:ID:       8112F432-DE4C-41AD-89B4-BBC132ABAAFE
:END:

      - RNA expression varies about 10^5
      - RNA counts follow “overdispersed” poisson ( (large number of events, each event is rare) / negative binomial distribution (additional factor is dispersion)
        expression levels of same gene across tissues follow log-normal distribution 
        - base distribution is Poisson (b/c large number of events, each event is rare), variance = mean
        - shot noise- noise from sampling
        - zero inflation- many zero counts 
        - negative binomial (overdispersed Poisson), variance = mean + (1/r)*u^2, used by
          - DESeq2 (can also do continuous values like limma)
          - EdgeR

****** Expression Level Abundance, Normalization Units
:PROPERTIES:
:ID:       D4BFCCCA-8BBC-4D23-B71B-F8C2ED6287E3
:END:
https://ro-che.info/articles/2016-11-28-rna-seq-normalization
R/FPKM and C/TPM are "local" to the sample while TMM must be recalculated with different sample set

******* Raw- required input for DE analyses
:PROPERTIES:
:ID:       82A81565-9333-4E40-806E-474399BD73C4
:END:

******* R/FPKM
:PROPERTIES:
:ID:       9D6324B7-D9A2-44ED-A54F-B0C0C8DCECE2
:END:

- normalization for library size (i.e. sequencing depth) and transcript length
- use to
  - compare a gene across samples or
  - compare different genes within a sample
- see Mortazavi A., Williams B.A., McCue K., Schaeffer L., and Wold B. Mapping and quantifying mammalian transcriptomes by RNA-seq. Nat Methods 5(7):621–628, 2008.
- RPKM (reads per thousand nucleotides in transcript per million reads)
  - “For example, if a 2 kb transcript has 1000 reads and the total number of reads is 25 million, then RPKM = (1000/2)/25 = 20”
- FPKM (fragments per thousand nucleotides per million mapped reads)- equivalent of RPKM for paired-end (two reads per fragment)

******* CPM (counts per million) / TPM
:PROPERTIES:
:ID:       8C3481E5-B350-4D9D-A44C-DAB17FAEE1C6
:END:

  -   - see Wagner G.P., Kin K., and Lynch V.J. Measurement of mRNA abundance using RNA-seq data: RPKM measure is inconsistent among samples. Theory Biosci 131(4):281–285, 2012.=
  - limma voom uses a logCPM 
  - corrects for transcript length distribution of different sample pools  
  - TPM (transcripts per million)- divides by sum of transcript-length-normalized reads
    i.e. normalizes to transcripts as opposed to reads
    useful if average transcript length differs b/w samples 

******* TMM (trimmed mean of M values)
:PROPERTIES:
:ID:       544B0EAB-4594-404B-9C83-B951E2244CFE
:END:

-attempts to normalize this problem:
[[file:work.org_imgs/20160419_132550_469_bk.png]]
- corrects for less "sequencing real estate" due to high expression per tissue 

****** RNA-seq GSEA
:PROPERTIES:
:ID:       A63D2E56-83FB-4667-A7D5-966AC105C6F3
:END:

http://software.broadinstitute.org/gsea/index.jsp 

****** Notes
:PROPERTIES:
:ID:       558011C7-FB50-435E-B130-E3485CC25B90
:END:

  - [[http://sfg.stanford.edu/computer.html][Simple Fool's Guide]]
  - [[http://bioinformatics.ucdavis.edu/docs/2014-december-workshop/index.html][UC Davis RNA seq workshop]]
  - [[http://rnaseq.uoregon.edu/][RNAcyclopedia]]
  - [[https://github.com/griffithlab/rnaseq_tutorial/wiki/Citation][Griffith RNA-seq tutorial]]

    see Jacob,14 chance of balls example: 
    - for RNA seq counts, variance grows w/ mean 
    [[http://wiki.bits.vib.be/index.php/RNAseq_toolbox][comprehensive RNA seq tool list]]
    https://en.wikipedia.org/wiki/List_of_RNA-Seq_bioinformatics_tools  
    [[http://rnaseq-book.blogspot.fi/][Korpelainen,15 web companion]]
    http://hgdownload.cse.ucsc.edu/goldenPath/hg19/encodeDCC/wgEncodeCaltechRnaSeq/ 
    [[https://github.com/griffithlab/rnaseq_tutorial/blob/master/manuscript/supplementary_tables/supplementary_table_7.md][Griffith lab common RNASeq Q&A]]
    see [[http://www.cbil.upenn.edu/BEERS/][BEERS]] for generating fake RNA seq data
    [[https://www.youtube.com/channel/UCQqQpIx3zQPaifBj67ocv1w][ BabrahamBioinf youtube]]
    other RNA-Seq pipelines
    http://docs.sevenbridges.com/
    https://bioinformatics.cineca.it/rap/index.php
    https://bioinformatics.cineca.it/rap/index.php 
    normalization- w/o v. high expressed genes (see Jacob,14): 

******* Expression, GO, and Enrichment
:PROPERTIES:
:ID:       2E80B6E2-EE95-42F3-9223-37829918D611
:END:

******** DAVID
:PROPERTIES:
:ID:       C711AA24-BB0B-4CE0-BB50-E8B77CD80A86
:END:

******* file:~/Box%20Sync/comp_bio/Love,15 Bioconductor workflowm RNA seq gene level exploratory analysis and differential expression.pdf airway- RNA-seq workflow example from counts thru DE- see Redu and expand from GTAC counts thru airway workflow
:PROPERTIES:
:ID:       F57EECA5-D036-4249-B81E-DA771BBBB3BC
:END:

******** Review
:PROPERTIES:
:ID:       ADF182D0-49DB-41EF-A899-D2B450269E79
:END:
CLOCK: [2016-03-28 Mon 19:06]--[2016-03-28 Mon 19:29] =>  0:23
CLOCK: [2016-03-28 Mon 13:01]--[2016-03-28 Mon 13:06] =>  0:05

******* 151014.1600 rna seq lecture
:PROPERTIES:
:ID:       F7FC6747-EE43-45BA-B1B2-1F806A17008B
:END:

******** Check again for video / slides
:PROPERTIES:
:ID:       092A2A22-A73E-458F-A940-11A95787F2C6
:END:

********* Read selection
:PROPERTIES:
:ID:       4FCE430A-CB6B-43F7-B97A-C6625688B1F3
:END:

********** No low complexity
:PROPERTIES:
:ID:       27EBA6FF-D682-4AC0-BBC8-5322A58EDDFC
:END:

********** Duplicates are pcr in DNA, maybe not rna
:PROPERTIES:
:ID:       7663B037-8953-4DEA-BEAD-0D76F0643451
:END:

******** Qc- uses fastqc
:PROPERTIES:
:ID:       43003B38-3CF6-4899-8A5B-B3C3DD164DD7
:END:

******** Alignment
:PROPERTIES:
:ID:       6E310CCE-9E83-4819-9165-94224F1A230E
:END:

********* Tophat exon first
:PROPERTIES:
:ID:       2F78BEF9-7A44-4C1E-B46B-377AC0ADEE52
:END:

********** Can align pseudo
:PROPERTIES:
:ID:       E37A8FF4-CA2E-41F2-847F-E3A0D66C459D
:END:

********* Seek and extend
:PROPERTIES:
:ID:       5CE5BD6A-F0ED-4EE4-A360-8B0DA74254BE
:END:

******** Align isoforms or de novo contigs
:PROPERTIES:
:ID:       BD293AAF-AE30-46DA-8BD8-A2E4EDFA4AF1
:END:

********* Align and assemble is most common, poor for discovery- engstrom nature methods 2013 evaluates simulated aligners
:PROPERTIES:
:ID:       6C30DA94-2113-4DCE-AC20-D46E50FE75BA
:END:

******** Applications
:PROPERTIES:
:ID:       E53911C4-D9CF-4E48-B985-F782EC1AD387
:END:

********* Differential expression
:PROPERTIES:
:ID:       739AEF04-611C-4E79-BE07-D45EEDA0C20A
:END:

********** Quantification- fpkm (fragments per kilobase of exon per million mapped fragments)
:PROPERTIES:
:ID:       8F3F497E-5609-4F4D-AD19-7B2AD7279A03
:END:

********** There is a samseq
:PROPERTIES:
:ID:       D4E230BA-709E-45BE-BD08-26CD0EDFAA7A
:END:

********** Of isoforms
:PROPERTIES:
:ID:       5DD63AE3-AC20-465E-8A54-E7F7D0FE20C5
:END:

*********** Cufflinks
:PROPERTIES:
:ID:       CEEC4DDD-23D1-4658-8528-0D34CC5C8996
:END:

********** Gene fusion discovery
:PROPERTIES:
:ID:       AC7770CE-1DDF-441B-9B22-4D448FDB4D7B
:END:

- cite:zheng2014anchored

*********** Types of fusions
:PROPERTIES:
:ID:       C6A319EE-84DB-42F2-AD2D-92E2F76B7DC6
:END:

************ Tmpress- regulatory region drives expression
:PROPERTIES:
:ID:       AF35B470-C120-4EED-8D98-B2B34F0D655A
:END:

************ Bcr aml- both are expressed
:PROPERTIES:
:ID:       95C766BF-C401-4E39-B43B-947F03288BE0
:END:

************ See pnas maher 2009
:PROPERTIES:
:ID:       ED8B7DC4-D7C2-4FB4-9329-E7A1621F9E3D
:END:

************* Reducing false pos strategy
:PROPERTIES:
:ID:       35A22E81-5854-4904-9CEB-7BC7940B37CC
:END:

********** Noncoding rna discovery
:PROPERTIES:
:ID:       60836B8D-AFF3-42CF-8976-C60D27BEF080
:END:

********** Snvs validation
:PROPERTIES:
:ID:       92698903-1D1A-45C6-9595-E5CACE238A4A
:END:

********** Prot associated  rna
:PROPERTIES:
:ID:       44228174-4A6A-4023-AD8E-E47661939B25
:END:

*********** Hits clip for splicing factors
:PROPERTIES:
:ID:       03ABC4EB-D099-4495-A032-6DB6ACC589C6
:END:

*********** Ribosomal profiling ingolia nature reviews genetics 2014
:PROPERTIES:
:ID:       C736A515-B629-44BC-BC92-6E1B85499477
:END:

*********** Pathway analysis- goseq
:PROPERTIES:
:ID:       E6CE3505-B500-4E28-96D1-96CEDFADCEC8
:END:

[[http://blog.olgabotvinnik.com/blog/2012/08/24/2012-08-24-bam-files-profit/][good pipeline assembly example]]
http://www.nature.com/nbt/journal/v32/n9/full/nbt.3000.html
[[file:~/Box%20Sync/comp_bio/RNA-seq/SEQC,14%20A%20comprehensive%20assessment%20of%20RNA%20seq%20accuracy%20reproducibility%20and%20infrmation%20content.pdf][SEQC,14 A comprehensive assessment of RNA seq accuracy reproducibility and infrmation content]]

****** edgeR
:PROPERTIES:
:ID:       32BB77F2-0283-4A52-86AC-CDF2CB6A7315
:END:

[[file:~/Box%20Sync/comp_bio/RNA-seq/Rueda,15%20Differential%20expression%20analysis%20using%20edgeR.pdf][Rueda,15 Differential expression analysis using edgeR]]
[[file:~/Box%20Sync/comp_bio/RNA-seq/edgeRUsersGuide.pdf][User Guide]]
[[file:~/Box%20Sync/comp_bio/RNA-seq/edgeR_manual.pdf][Manual]]


[[file:~/Box%20Sync/library/Robinson,09%20edgeR%20a%20Bioconductor%20package%20for%20differential%20expression%20analysis%20of%20digitial%20gene%20expression%20data.pdf][Robinson,09 edgeR a Bioconductor package for differential expression analysis of digitial gene expression data]]

******* edgeR full example
:PROPERTIES:
:ID:       846943FC-BA4B-4658-9B1E-85FBA536D9EE
:END:

****** DESeq2 DE
:PROPERTIES:
:ID:       642137BE-AF2F-4219-9AA5-BEC1D6E94CE6
:END:

******* Examples- see [[file:~/Box%20Sync/comp_bio/deseq2_template/][deseq2_template]]
:PROPERTIES:
:ID:       5C8E2A3B-2C16-4FB3-9F86-5A1D8AD4802F
:END:

******** DONE Example 1: [[file:~/Box%20Sync/comp_bio/deseq2_template/Love,15%20RNA%20seq%20workflow%20gene%20level%20exploratory%20analysis%20and%20differential%20expression.pdf][Love,15 Airway]]
CLOSED: [2016-06-27 Mon 14:45]
:PROPERTIES:
:ID:       791A1ABC-4138-4CD2-82AE-63905C053571
:END:
:LOGBOOK:  
CLOCK: [2016-06-27 Mon 10:22]--[2016-06-27 Mon 10:37] =>  0:15
CLOCK: [2016-06-23 Thu 09:22]--[2016-06-23 Thu 10:19] =>  0:57
CLOCK: [2016-06-22 Wed 17:56]--[2016-06-22 Wed 18:30] =>  0:34
CLOCK: [2016-06-22 Wed 14:50]--[2016-06-22 Wed 16:02] =>  1:12
CLOCK: [2016-06-22 Wed 12:09]--[2016-06-22 Wed 12:57] =>  0:48
CLOCK: [2016-06-22 Wed 11:40]--[2016-06-22 Wed 11:46] =>  0:06
:END:      

******** DONE Example 2: [[file:~/Box%20Sync/comp_bio/deseq2_template/https___software.rc.fas.harvard.edu_ngsdata_workshops_2015_March_DESeq2_fruitfly.pdf][Drosophila]]
CLOSED: [2016-06-27 Mon 14:45]
:PROPERTIES:
:ID:       CC047BA0-35A3-420B-BB60-CA1AA7AE275B
:END:

https://software.rc.fas.harvard.edu/ngsdata/workshops/2015_March/DESeq2_fruitfly.html

******** DONE Example 3: Hox
CLOSED: [2016-06-28 Tue 13:48]
:PROPERTIES:
:ID:       97126EA4-E1CD-4CD5-9746-A7C9393DF712
:END:

http://www.gettinggeneticsdone.com/2015/12/tutorial-rna-seq-differential.html

******** Example 4 [[file:~/Box%20Sync/comp_bio/Love,16%20Differential%20analysis%20of%20RNA%20seq%20data%20using%20the%20DESeq2%20package.pdf][Love,16 Differential analysis of RNA seq data the DESeq2 package]]
:PROPERTIES:
:ID:       61BDAC0E-3F02-482A-868E-93AC26B33361
:END:
:LOGBOOK:  
CLOCK: [2016-06-22 Wed 11:15]--[2016-06-22 Wed 11:40] =>  0:25
CLOCK: [2016-06-21 Tue 16:41]--[2016-06-21 Tue 16:59] =>  0:18
CLOCK: [2016-06-21 Tue 15:33]--[2016-06-21 Tue 16:31] =>  0:58
CLOCK: [2016-06-20 Mon 13:48]--[2016-06-20 Mon 14:21] =>  0:33
CLOCK: [2016-06-20 Mon 12:21]--[2016-06-20 Mon 12:23] =>  0:02
:END:      

********* Standard workflow
:PROPERTIES:
:ID:       ABBDC255-8B16-4598-AA75-6D0ADAD3E48E
:END:

********** Input data
:PROPERTIES:
:ID:       71704A3E-FEE2-4363-BA67-4CA68D516375
:END:

*********** SummarizedExperiment input
:PROPERTIES:
:ID:       F4CCA76E-3FBE-4E20-B6DE-69FB848D7123
:END:

- DESeqDataSet
  - is an extension of the RangedSummarizedExperiment class
  - requires design formula
    - ~ followed by variables w/ plus sign between
    - put variable of interest at end of formula
- Preferred count algorithm is summarizedOverlaps w/ mode="Union"

*********** Pre-filtering
:PROPERTIES:
:ID:       1D88E488-4AFA-4A0F-A994-3C1664B5D156
:END:

- by DESeq2
  - on mean of normalized counts per gene- maximized genes w/ adjusted p value below a FDR of alpha 
- (by user)
  - increases processing speed and reduces memory
  - b/ not necessary for DESeq2 function

********** Exploring and exporting results
:PROPERTIES:
:ID:       B87063F9-4578-440B-BF94-9DF134AF438A
:END:

*********** MA-plot
:PROPERTIES:
:ID:       BBEB1ADB-F328-4B7B-807D-F8C158D60083
:END:

- useful to look at how the DESeq2 function shrinkage performed
- after calling plotMA, the identify function can interactively select dots
- for unshrunken results, add addMLE=T to get a column called lfcMLE 

*********** Plot counts
:PROPERTIES:
:ID:       CB3647FE-90B2-47AD-8E89-AA206A6C207F
:END:

- plotCounts will give counts normalized by sequencing depth for a specific gene 

*********** p values set to NA
:PROPERTIES:
:ID:       F28D686F-0E61-42C9-81DB-6BD581223377
:END:

- all samples w/ zero counts
- rows w/ extreme count outlier by Cook's distance
- low mean normalized count (here only the p value will be NA) 

*********** Rich visualization and reporting of results- checkout Bioconductor packages [[http://bioconductor.org/packages/release/bioc/html/ReportingTools.html][ReportingTools]], regionReport, [[http://bioconductor.org/packages/release/bioc/html/Glimma.html][Glimma]], and pcaExplorer
:PROPERTIES:
:ID:       8CE69F91-1AFB-477A-996A-95212336AD6D
:END:

********* Data transformations and visualization
:PROPERTIES:
:ID:       99C0CCAA-43A0-4E37-8C72-98617C51D928
:END:

********** Count data transformations
:PROPERTIES:
:ID:       3E7192A1-175C-4D3A-A5E7-08D6CC64DCEC
:END:

- transformations for EDA
  - pseudocounts: y=log2(N+No)
  - log2-based alternatives
    - find experiment-wide trend in variabnce/mean and remove dependnece of variance on mean 
    - rlog
    - VST (variance stabilizing transformations) 

*********** Blind dispersion estimation
:PROPERTIES:
:ID:       BFA60D58-A2E6-49F4-9912-2CF15D0BD356
:END:

- blind to sample information is default
- change if many/most genes will have large differences- can be checked with MA over-shrinking 

********* Variations to the standard workflow
:PROPERTIES:
:ID:       7A2DB9FE-8DE5-481A-9C1A-4F26DC867582
:END:

********** Contrasts
:PROPERTIES:
:ID:       A6AC8C5D-8828-4B96-BDB4-760B1F0DE0BA
:END:

- Contrast
  - i.e. w/ levels A,B,C, test all possible differences of A vs B, A vs C, B vs C, ... 
  - linear combination of estimated log2 fold changes

********** Interactions- tests whether log2 fold change attributable to one condition is different based on another condition
:PROPERTIES:
:ID:       E2EE7973-FFB1-4842-83E8-665DCCA8F2C9
:END:

********** Likelihood ratio test
:PROPERTIES:
:ID:       F15FCEE5-B88F-4712-B3B1-03C576F8E44F
:END:

- Wald test asks if log2 fold change b/w groups is zero based on mean and SE
- LR
  - asks whether full model (w/ groups) and reduced model (w/ some terms removed) are different
  - like a ANOVA except this is analysis of deviance

********** Approach to count outliers
:PROPERTIES:
:ID:       682697F8-D316-4A04-9B6D-8BCB0261DE15
:END:

- Cook's distance- for how much single sample is influencing fitting coefficients
  - automatic in results function
  - requires at least 3 replicates
  - @ >6 samples, instead of eliminating gene, the outlier is replaced w/ the trimmed mean over all samples
  - not run when continuous variables are in the design 

********** Independent filtering of results
:PROPERTIES:
:ID:       0778E394-2A3A-4952-9126-668AC8162D3A
:END:

results function maximizes p values less than * over quantiles of mean normalized counts

********** Tests of log2 fold change above or below a threshold
:PROPERTIES:
:ID:       70E0F04B-9D6B-4C11-A34E-6EE2FB008185
:END:

********** Access to all calculated values
:PROPERTIES:
:ID:       60580A3B-7A73-45A0-984F-0E83E5B6F2EC
:END:

********** Sample-/gene-dependent normalization factors
:PROPERTIES:
:ID:       BB95C4F2-763B-447D-A840-372588D43C79
:END:

********** “Model matrix not full rank”
:PROPERTIES:
:ID:       7F14D356-858D-46DD-9044-C1A6CD2F8A08
:END:

*********** Linear combinations
:PROPERTIES:
:ID:       D9625DD4-D506-4E43-836D-9E0CDDCB9A79
:END:

*********** Levels without samples
:PROPERTIES:
:ID:       E65BA44B-FBA9-4A05-93B0-1246608C3754
:END:

********* Theory behind DESeq2
:PROPERTIES:
:ID:       C0765E52-718B-4771-9ECC-3689EE7CAA21
:END:

********** The DESeq2 model
:PROPERTIES:
:ID:       08949A97-2A7C-4D21-A9EB-811440E003A8
:END:

********** Changes compared to the DESeq package
:PROPERTIES:
:ID:       41E50955-4ADF-4560-ACD0-86F58F544033
:END:

********** Methods changes since the 2014 DESeq2 paper
:PROPERTIES:
:ID:       1D28C489-FF28-4112-B9B9-70C09D382608
:END:

********** Count outlier detection
:PROPERTIES:
:ID:       14989EE3-4903-4FCB-A270-E3BAFFCD6EFA
:END:

********** Contrasts
:PROPERTIES:
:ID:       45C7C99A-DC18-4293-9381-878DE892D84A
:END:

********** Expanded model matrices
:PROPERTIES:
:ID:       FBAAB9AE-7D25-43A5-9363-766F84F32198
:END:

********** Independent filtering and multiple testing
:PROPERTIES:
:ID:       EB54BD27-FD99-45DD-B671-8BBEB06857FE
:END:

*********** Filtering criteria
:PROPERTIES:
:ID:       4705CA0F-C007-4503-A898-74E946304812
:END:

*********** Why does it work?
:PROPERTIES:
:ID:       BA1FC087-AAF6-4116-9B86-0B0B4BBC5FDB
:END:

********* Frequently asked questions
:PROPERTIES:
:ID:       7A2CF9E1-0C06-45FF-9637-C085CC6F15A0
:END:

********** How can I get support for DESeq2?
:PROPERTIES:
:ID:       B5ADEA5D-15C6-4449-B15F-908E63118B76
:END:

********** Why are some pvalues set to NA?
:PROPERTIES:
:ID:       3D889B88-07E4-4D2C-91F1-58CCF54C9C2C
:END:

********** How can I get unfiltered DESeq results?
:PROPERTIES:
:ID:       A4107221-A74A-4E79-AC6E-057F5CAB86DF
:END:

********** How do I use the variance stabilized or rlog transformed data for differential testing?
:PROPERTIES:
:ID:       F6C4F4CE-03E9-46FC-8F9A-EF915DF7FEF2
:END:

********** Can I use DESeq2 to analyze paired samples?
:PROPERTIES:
:ID:       DA9671DE-23CE-4603-9077-0F8576CEECBF
:END:

********** If I have multiple groups, should I run all together or split into pairs of groups?
:PROPERTIES:
:ID:       5384671F-9FF2-4589-80E4-7B6E7AA681FF
:END:

********** Can I run DESeq2 to contrast the levels of 100 groups?
:PROPERTIES:
:ID:       355A5DC0-1A35-4315-8DEB-4C2275EA9A7C
:END:

********** Can I use DESeq2 to analyze a dataset without replicates?
:PROPERTIES:
:ID:       4AF6174D-0E98-4139-89B6-2E2AB1B13BA4
:END:

********** How can I include a continuous covariate in the design formula?
:PROPERTIES:
:ID:       BBFFFE10-B8CF-4E66-9BA9-B78B0DA2FAF9
:END:

********** Will the log fold change shrinkage “overshrink” large differences?
:PROPERTIES:
:ID:       01210C6E-221E-403D-AE9C-63946B83F9A4
:END:

********** I ran a likelihood ratio test, but results() only gives me one comparison
:PROPERTIES:
:ID:       76AC2A68-59B8-4E92-B384-822B8CE0DD7B
:END:

********** What are the exact steps performed by DESeq()?
:PROPERTIES:
:ID:       74C55B19-7DAA-4357-8F15-179AF2645CFF
:END:

********** Is there an official Galaxy tool for DESeq2
:PROPERTIES:
:ID:       5A4CB62B-A91F-467F-AA52-B8D1C66D9D28
:END:

********** I want to benchmark DESeq2 comparing to other DE tools.
:PROPERTIES:
:ID:       9B564504-8E91-4921-87D8-3AE89F5F6E2F
:END:

********* SessionInfo
:PROPERTIES:
:ID:       626CE66C-E3D7-4D09-BEDC-27812DB3689B
:END:

[[file:~/Box%20Sync/comp_bio/Love,14%20Beginners%20guide%20to%20using%20the%20DESeq2%20package.pdf][Love,14 Beginners guide to using the DESeq2 package]]
[[file:~/Box%20Sync/comp_bio/Love,15%20DESeq2%20User%20Guide.pdf][User Guide]]
[[https://support.bioconductor.org/local/search/page/?q=deseq2][Bioconductor Support]]
[[file:~/Box%20Sync/library/Love,16%20DESeq2%20manual.pdf][Manual]] 
A negative binomial GLM 
[[https://www.youtube.com/results?search_query=deseq2&page=&utm_source=opensearch][Youtube]]
[[file:~/Box%20Sync/library/Love,14%20Moderated%20estimation%20of%20fold%20change%20and%20dispersion%20for%20RNA%20seq%20data%20with%20DESeq2.pdf][Love,14 Moderated estimation of fold change and dispersion for RNA seq data with DESeq2]] 
[[ftp://ftp.jax.org/dgatti/ShortCourse2015/tutorials/Differential-Expression.html][Workflow example]]
[[http://www.sthda.com/english/wiki/rna-seq-differential-expression-work-flow-using-deseq2][Another workflow example]]
[[https://dwheelerau.com/2014/02/17/how-to-use-deseq2-to-analyse-rnaseq-data/][And another workflow example]]

******* Import Functions:
:PROPERTIES:
:ID:       A3402721-3C44-476C-8070-2BEFAFD5DBBC
:END:

| Function          | Package           | Framework | Output               | DESeq2 input function    |
|-------------------+-------------------+-----------+----------------------+--------------------------|
| summarizeOverlaps | GenomicAlignments | R         | SummarizedExperiment | DESeqDataSet             |
| featureCounts     | Rsubread          | R         | matrix               | DESeqDataSetFromMatrix   |
| tximport          | tximport          | R         | list of matrices     | DESeqDataSetFromTximport |
| htseq-count       | HTSeq             | Python    | files                | DESeqDataSetFromHTSeq    |

******* Ideas
:PROPERTIES:
:ID:       649F78F9-F93B-4DCC-A7F8-D09A8BE5328E
:END:

Love,16 see source code to generate fig 4

******* DESeq2 DE
:PROPERTIES:
:ID:       A018B509-E006-4B78-A51B-D75A69CDD859
:END:

[[file:~/Box%20Sync/library/Love,16%20DESeq2%20manual.pdf][Manual]]
CompBio [[DESeq2]]
somehow I previously got the summarizedExperiment to work, stored at [[file:~/scratch/jeszyman/Lee_Lab/whisker_pt/airway/][airway]]
  - working through airway example, GTAC bams, SummarizeExperiment counts (airway settings) 
    - millions of reads per sample: 35.0 30.8 27.7 25.0 32.3 30.0 31.0 34.3 29.7 34.4 34.2 32.7 34.3
    - filtering counts <2 = 0
    - rlog sample distances

    next see Love,15 NON-airway vignette 

****** Exploratory Data Analysis
:PROPERTIES:
:ID:       C3E5C3EA-3260-4AF6-B57A-410D5ECA28B6
:END:

"Rik" is from MGI indicating a noncoding transcript

if factors exist and are real, should show up in the PCA
examples to review- Sharma,15

strand specific rna-seq is really strand and direction-specific 
http://bcf.isb-sib.ch/data/compcodeR/vignette-0.99.3.pdf

***** Expression
:PROPERTIES:
:ID:       B0DF5D49-591F-4C7A-8AD1-8465C20F8C83
:END:

- rna-seq expression workflows
  - https://davetang.org/muse/2017/10/25/getting-started-hisat-stringtie-ballgown/
- https://support.bioconductor.org/p/107011/
- cite:chen2010

****** Gene Set Enrichment
:PROPERTIES:
:ID:       87734999-3139-4343-A323-925416811B12
:END:

- https://www.reddit.com/r/bioinformatics/comments/66374x/gsea_vs_go_enrichment/

******* [[http://www.bioconductor.org/packages/release/bioc/html/gage.html][GAGE]] (generally applicable gene-set enrichment for pathway analysis)
:PROPERTIES:
:ID:       441F7686-9969-4F8D-8092-C4429377214C
:END:

[[file:~/Box%20Sync/comp_bio/gsea_template/][Folder]]
[[file:~/Box%20Sync/comp_bio/gsea_template/gage.pdf][Manual]]
[[file:~/Box%20Sync/comp_bio/gsea_template/gsea_template.R][Rscript]]

******** RNA-Seq Workflow Example
:PROPERTIES:
:ID:       B687F931-3A5E-4CD0-B2B7-30DF026E0AB9
:END:

[[file:~/Box%20Sync/comp_bio/gsea_template/][Folder]]
[[file:~/Box%20Sync/comp_bio/gsea_template/RNA-seqWorkflow.pdf][pdf]]

******* Commercial
:PROPERTIES:
:ID:       417416B5-0169-41CA-8FCE-4D6E440C7E3A
:END:

http://www.ingenuity.com/
[[http://genome.ucsc.edu/cgi-bin/hgTables?command=start][create your own GTF]]
[[http://bedops.readthedocs.io/en/latest/index.html][BEDOPS]]
https://www.datacamp.com/

****** Genotype-Phenotype Associations
:PROPERTIES:
:ID:       69F82D91-6DE6-4332-AD0A-7ADF25263858
:END:

- cite:Denny_2011
- cite:Kho_2011


****** Effector Data Mining
:PROPERTIES:
:ID:       2CA85A6B-7B1E-4A38-96AA-717847A59168
:END:

******* Chemical- NextBio, see Webster,15ref Kupershmidt,10
:PROPERTIES:
:ID:       DD97187A-47FF-49D2-87D3-9DDFC9E1D351
:END:

http://101.datascience.community/tag/octave/
http://www.cbioportal.org/cgds_r.jsp
https://precision.fda.gov/
http://www.russpoldrack.org/?m=1
https://www.biostars.org/u/3737/
https://bioinformatics.ca/workshops/2014/informatics-rna-sequence-analysis-bc-2014
[[https://www.bioconductor.org/help/course-materials/][Bioconductor courses and conferences]]
[[https://www.ebi.ac.uk/training/online/course/embo-practical-course-analysis-high-throughput-seq/introduction-r-and-bioconductor][EMBO introduction to R and Biocinductor]]
[[https://www.edx.org/course/introduction-bioconductor-annotation-harvardx-ph525-5x][edX Intro to bioconductor]]
[[https://www.edx.org/course/high-dimensional-data-analysis-harvardx-ph525-4x][edX high-dimensional data analysis]]
[[https://www.coursera.org/learn/bioconductor][coursera bioconductor for genomic data science]]
http://bcb.dfci.harvard.edu/~aedin/courses/Bioconductor/

https://www.bioconductor.org/packages/devel/bioc/vignettes/SummarizedExperiment/inst/doc/SummarizedExperiment.html

****** Broad Calling variants in RNAseq
:PROPERTIES:
:ID:       DA64BC88-8BD6-40DF-9D80-5596BFA4D643
:END:

https://software.broadinstitute.org/gatk/documentation/article?id=3891

**** quality control
- https://www.reddit.com/r/bioinformatics/comments/flqb8e/how_do_i_differentiate_outliers_from_ingroup/
- https://www.rna-seqblog.com/an-rna-seq-qc-overview/
- https://www.biostars.org/p/368420/
- https://bioinformatics.stackexchange.com/questions/3572/strange-per-sequence-gc-content-results
- cite:wang2012
- dv200
  - RIN and DV 200 d/n correlate
  - [[file:~/data/library/illumina2016.pdf]] Agilent Technologies. (2004) RNA Integrity Number (RIN) - Standardization of RNA Quality Control Publication PN 5989-1165EN.
- bias
  - cite:li2014  
- https://www.illumina.com/content/dam/illumina-marketing/documents/products/technotes/evaluating-rna-quality-from-ffpe-samples-technical-note-470-2014-001.pdf
- https://github.com/griffithlab/rnaseq_tutorial/wiki/PostAlignment-QC
- rna sequence qc
  - https://www.google.com/search?q=multiqc
  - https://pmbio.org/module-02-inputs/0002/06/01/PreAlignment_QC/
  - https://blog.omictools.com/your-top-3-rna-seq-quality-control-tools/
- post-alignment
  - cool read/library size comparison in limma user guide 18.1 
  - Post-alignment metrics
    - Mappability
      - % of reads mapped to transcriptome
      - % of reads with a mate pair
      - 5' /3' coverage bias
      - chromosomal distribution 
    - rRNA/tRNA contamination- count rRNA-aligned
    - saturation test of sequencing depth- RPKM vs. resampling percentage (don’t understand this one yet)
      - RPKM vs. resampling percentage for saturation
    - reproducibility between replicates
      - technical replicates evaluate background, chemistry, instruments,
      - biological replicates
        - pearson correlation for biological replicates
      - read number vs. percentile of gene body for per-gene coverage uniformity 
  - strand specificity- not present unless specific 3’/5’ adaptors- usually can’t tell where read is from for overlapping RNAs from opposite strands
  - coverage
    - for DE, 30 million pair-end w/ >30 bp
    - per ENCODE, 100-200 million 2x76 bp for alt splice, gene fusion, novel transcript ID
  - check out SeqMonk
  - MAPQ score:  −10 log10 Pr{mapping position is wrong}, rounded to the nearest integer. A value 255 indicates that the mapping quality is not available
  - References
    - [[https://github.com/griffithlab/rnaseq_tutorial/wiki/PostAlignment-QC][Griffith Lab RNA-Seq tutorial, PostAlignment QC]]
- [[http://davetang.org/wiki/tiki-index.php?page=SAMStat][SAMStat]]
- [[Samtools]]
- RSeQC
  - bam_stat.py  -i file.bam
  - clipping_profile.py -i Pairend_nonStrandSpecific_36mer_Human_hg19.bam -s "PE" -o out
  - see more http://rseqc.sourceforge.net/ 
  - can also divide bam into n randomly sampled parts
  - some useful functions
  - determine strandedness w/ infer_experiment.py 
  - Splice Junction Saturation using [[http://rseqc.sourceforge.net/][RSeQC]]
    - checks if sequence depth is sufficient to find all features 
    - see https://github.com/griffithlab/rnaseq_tutorial/wiki/PostAlignment-QC 
      - inputs
        - BED
        - SAM/BAM
        - Chromosome size file
        - Fasta

        use bedops to convert GTF to BED

        keeps throwing error of ValueError: invalid literal for int() with
        base 10: 'transcript_id'

        High coverage at one end and low coverage at the opposite end indicates end bias during sample and library preparation. Inconsistent spikes in coverage across the gene body with low coverage in between spikes indicates sample degradation or library preparation artifacts that are typical with non-strand displacing random priming library preparation such as the Sigma kit for low input or degraded FFPE samples. (5K PDF format)”




***** Count Table QC
:PROPERTIES:
:ID:       C4236326-0D06-4D76-BC3A-9E51E67E553C
:END:

- For differential expression, if coverage across transcript is poor, consider using only uniquely mappable reads

**** quantification and normalization
- https://github.com/griffithlab/rnaseq_tutorial/wiki/Transcript-Assembly-Merge
- https://www.reddit.com/r/bioinformatics/comments/i6qhrx/samples_from_different_studies_de_analysis_help/
- https://www.nature.com/articles/ng1032z.pdf
- methods
  - TMM
  - TPM
  - FPKM
  - https://europepmc.org/article/PMC/6058388
  - abundance 
    - http://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html#introduction
- evaluation
  - linearity
    - https://link.springer.com/article/10.1186/s12859-017-1526-y
  - https://bioinformatics.stackexchange.com/questions/92/confirm-success-or-failure-of-rna-seq-normalization
    - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4404308/
- https://groups.google.com/forum/m/#!topic/rsem-users/GRyJfEOK1BQ
- https://www.biostars.org/p/68126/
- https://genomebiology.biomedcentral.com/articles/10.1186/gb-2010-11-3-r25
- https://cgatoxford.wordpress.com/2016/08/17/why-you-should-stop-using-featurecounts-htseq-or-cufflinks2-and-start-using-kallisto-salmon-or-sailfish/
- isoform abundance
  - https://cgatoxford.wordpress.com/2016/08/17/why-you-should-stop-using-featurecounts-htseq-or-cufflinks2-and-start-using-kallisto-salmon-or-sailfish/
- https://www.biostars.org/p/329625/
- sources of bias
  - 
- https://htseq.readthedocs.io/en/release_0.11.1/tour.html#counting-reads-by-genes
***** featureCounts in Rsubread
:PROPERTIES:
:ID:       0FB3EE5E-DD17-4438-BF35-011555A41DF9
:END:

[[http://www.rdocumentation.org/packages/Rsubread/functions/featureCounts][nice featureCounts manual]]

***** [#Y] summarizeOverlaps in GenomicAlignments
:PROPERTIES:
:ID:       16408005-913F-4675-BA61-B7594A3FB4EC
:END:

***** HTseq-count
:PROPERTIES:
:ID:       E2262D77-424F-4943-8DA4-5649B2F0B4B2
:END:

[[file:~/Box%20Sync/comp_bio/Anders,15%20HTSeq%20a%20python%20framework%20to%20work%20with%20high%20throughput%20sequencing%20data.pdf][Anders,15 HTSeq a python framework to work with high throughput
sequencing data]]

Not on cluster 

Installed local

ideas
- create R script to run stats on generic output file
  - % no feature, ambiguous, too low qual, not aligned, alignment not
    unique 

****** Prerequisites
:PROPERTIES:
:ID:       D5102869-0833-4513-A716-69D44892FDDF
:END:

- samtools sort (to postion) 

****** [[http://www-huber.embl.de/HTSeq/doc/count.html#count][website]]
:PROPERTIES:
:ID:       6B7F3881-DA7D-4700-BC30-9EF83150D916
:END:

htseq-count [options] <alignment_file> <gff_file>

simple code: htseq-count -m union -r pos -i gene_name -a 10 --stranded=no agcgccg.bam Mus_musculus.GRCm38.84.gtf > output.counts

Important options
--stranded=no (defualt is yes)
--format bam (defualt is sam)
  - for paired end, order is important
    - do samtools sort (default) to put in position order
    - in HTSeq-counts, specify -r pos
    -a 10 (minimum quality, 10 is default) 
    -m default is union, alternate intersection-strict and intersection-nonempty 

    Why union is default: consider two genes, which share a stretch of common sequence such that for a read mapping to this stretch, the aligner cannot decide which of the two genes the read originated from and hence reports a multiple alignment. If we discard all such reads, we undercount the total output of the genes, but the ratio of expression strength (the “fold change”) between samples or experimental condition will still be correct, because we discard the same fratcion of reads in all samples. On the other hand, if we counted these reads for both genes, a subsequent diffential-expression analysis might find false positives:


  followed by the special counters, which count reads that were not counted for any feature for various reasons

  [[http://www-huber.embl.de/HTSeq/doc/counting.html][algorithm details]]

***** Basic counting script
:PROPERTIES:
:ID:       AE616985-EA77-4CF0-8FEA-60FF56A04AC3
:END:

counting is computationally intensive- script HTseq and
summarizeOverlaps on the cluster 
variabilize RNA seq workflow- make into function 


**** Allele-specific Expression
:PROPERTIES:
:ID:       96C367A3-FEEB-4F6F-975A-A08A172FD277
:END:


**** Ideas
:PROPERTIES:
:ID:       B5E9166C-CB80-4578-BD90-1E694B46F192
:END:

[[http://bioinf.wehi.edu.au/marray/jsm2005/lab4/lab4.html][A limma workflow to try]]
[[http://combine-australia.github.io/RNAseq-R/06-rnaseq-day1.html][another workflow example]]

see Love,16 section "Rich visualization and reporting of results"

***** Pipeline Comparisons
:PROPERTIES:
:ID:       7B9AD35F-1511-4CB2-BB5A-0989EFEAADF3
:END:

[[file:~/Box%20Sync/library/Fonseca,14%20RNA%20seq%20gene%20profiling%20a%20systematic%20empirical%20comparison.PDF][Fonseca,14 RNA seq gene profiling a systematic empirical comparison]]
[[file:~/Box%20Sync/library/Sigurgeirsson,14%20Analysis%20of%20stranded%20information%20using%20an%20automated%20procedure%20for%20strand%20specific%20RNA%20sequencing.pdf][Sigurgeirsson,14 Analysis of stranded information using an automated procedure for strand specific RNA sequencing]]

*** pathway analysis
:PROPERTIES:
:CREATED:  [2020-07-20 Mon 10:05]
:ID:       e4351ef3-6d41-4121-a2cc-c63d89f997ac
:END:

- https://www.nature.com/articles/ncomms13427#Sec10
  - https://github.com/varnivey/ipanda/blob/master/MANUAL.txt
- https://www.nature.com/articles/s41598-019-46059-1
- pathway image ideas
  - heatmaps
    - https://www.frontiersin.org/files/Articles/425394/fgene-10-00858-HTML/image_m/fgene-10-00858-g002.jpg
    - https://www.bioconductor.org/packages/release/bioc/vignettes/ReactomePA/inst/doc/ReactomePA.html
  - wire diagrams
  - bar and lolipop for p-value and set size
    - https://www.nature.com/articles/s41598-018-29420-8
    - https://www.frontiersin.org/articles/10.3389/fgene.2019.00858/full
** databases, data sets, and database browsers
:PROPERTIES:
:ID:       FCBA0863-010A-448C-A33C-941D2AA45AD5
:END:
:LOGBOOK:
CLOCK: [2019-07-07 Sun 09:58]--[2019-07-07 Sun 10:01] =>  0:03
CLOCK: [2019-02-22 Fri 07:58]--[2019-02-22 Fri 08:39] =>  0:41
CLOCK: [2018-03-03 Sat 20:28]--[2018-03-03 Sat 20:56] =>  0:28
:END:
- pathways
  - http://pathguide.org/
  - cite:chowdhury2015
  - https://www.bioconductor.org/packages/devel/data/experiment/vignettes/gskb/inst/doc/gskb.pdf
  - - https://www.bioconductor.org/packages/release/bioc/vignettes/ReactomePA/inst/doc/ReactomePA.html
- https://github.com/czbiohub/tabula-muris
- https://m.reddit.com/r/science/comments/4ybtym/science_ama_series_we_are_yaniv_erlich_and_joe/ 
- http://www.mirbase.org/
- https://www.ebi.ac.uk/services
- https://exrna.org/resources/data/
- http://www.reddit.com/r/askscience/comments/znlk6/askscience_special_ama_we_are_the_encyclopedia_of/
- http://david.abcc.ncifcrf.gov/
- http://browser.1000genomes.org/index.html
- http://www.proteinatlas.org/about
- https://www.nature.com/articles/s41586-019-1629-x
- [[Question: Selecting Random Pairs From Fastq?]]
- https://biodbnet-abcc.ncifcrf.gov/db/db2db.php
- dbGaP
  - https://www.ncbi.nlm.nih.gov/books/NBK99225/#DArequest.could_you_give_a_demo_about_th
- [[https://www.ccdatalab.org/blog/2019/3/29/gene-expression-repos-explained][gene expression repos explained]]
- datasets
  - https://www.reddit.com/r/bioinformatics/comments/bbocni/is_there_any_way_to_find_rnaseq_datasets_that/
  - https://github.com/genome/gms/wiki/HCC1395-WGS-Exome-RNA-Seq-Data
  - https://www.ncbi.nlm.nih.gov/geo/
  - [[https://www.ebi.ac.uk/ena][European Nucleotide Archive]]
  - [[https://exrna.org/resources/data/][exRNA]]
  - [[https://github.com/genome-in-a-bottle][Genome-in-a-bottle]]
    - https://github.com/genome-in-a-bottle
  - [[http://www.ebi.ac.uk/gwas/][The NHGRI-EBI Catalog of published genome-wide association studies]]
- cBioPortal
  - http://www.cbioportal.org/tutorials
- AACR GENIE
  - "regulatory-grade registry aggregating and linking clinical-grade cancer genomic data with clinical outcomes"
  - https://www.aacr.org/Research/Research/pages/aacr-project-genie.aspx
- Ensembl
  - [[https://useast.ensembl.org/info/data/ftp/index.html][Ensembl reference FTP]]
  - https://useast.ensembl.org/info/genome/variation/
- [[https://www.encodeproject.org/][ENCODE]]
- [[https://www.reddit.com/r/bioinformatics/comments/601fzr/where_can_i_access_free_sequencing_data/][Where can I access free sequencing data]]
- Variance
  - gnomAD
    - - https://mail.google.com/mail/u/0/#inbox/FMfcgxwBWKXrqjHPFNdbSqJRRRdhzdGf
    - https://macarthurlab.org/2017/02/27/the-genome-aggregation-database-gnomad/
    - (Subsumes ExAC)
  - ClinVar
    - [[https://www.ncbi.nlm.nih.gov/projects/clinvar/ClinVarDataDictionary.pdf][ClinVar Data Dictionary]]
  - phenotype association
    - https://genematcher.org/?tab=submissionsTab
    - [[https://www.ncbi.nlm.nih.gov/gap][dbGaP: database of Genotypes and Phenotypes]]
  - cBioPortal
    - http://www.cbioportal.org/tutorials
    - http://www.cbioportal.org/rmatlab
  - [[https://www.ncbi.nlm.nih.gov/projects/SNP/index.html][dbSNP]]
  - [[http://exac.broadinstitute.org/][ExAC Exome Aggregation Consortium]]
- [[https://gtexportal.org/home/datasets][GTEx]]
  - [[https://biospecimens.cancer.gov/resources/sops/][GTEx SOPs]]
  - GTEx currently uses the
    - GRCh37/Hg19 genome
    - GENCODE v19 annotation
      - The GENCODE annotation should be patched to use Ensembl chromosome names: zcat gencode.v19.annotation.gtf.gz | sed 's/chrM/chrMT/;s/chr//' > gencode.v19.annotation.patched_contigs.gtf
  - sample ID
    - such as GTEX-14753-1626-SM-5NQ9L?
    - GTEX-YYYYY GTEx donor ID
    - 2nd number mostly refers to the tissue site, BUT we do not recommend using it for tissue site designation.
    - 3rd number is the RNA or DNA aliquot ID used for sequencing.
  - Unstranded 
  - GTEx
    - [[https://www.ncbi.nlm.nih.gov/projects/gap/cgi-bin/study.cgi?study_id=phs000424.v7.p2][at dbGAP]]
- [[https://civic.genome.wustl.edu/#/home][CIViC]]
  - cite:griffith2017civic
- [[https://gdc.cancer.gov/][NCI Genomic Data Commons]]
  - [[https://docs.gdc.cancer.gov/][GDC documentation]]
  - [[https://gdc.cancer.gov/about-data/data-harmonization-and-generation/genomic-data-harmonization/genomic-data-alignment/rna-seq-pipeline][GDC RNA-seq pipeline]]
  - [[https://cbiit.nci.nih.gov/ncip/nci-cancer-genomics-cloud-pilots/nci-cloud-initiative][GDC cloud pilots]]
  - - https://gdc.cancer.gov/developers
  - https://docs.gdc.cancer.gov/
  - - https://gdc.cancer.gov/about-data/data-harmonization-and-generation/genomic-data-harmonization/genomic-data-alignment/rna-seq-pipeline
  - https://cbiit.nci.nih.gov/ncip/nci-cancer-genomics-cloud-pilots/nci-cloud-initiative
- [[http://www.internationalgenome.org/data#download][IGSR at 1000 Genomes]]
- cite:beck2015
- http://www.mirbase.org/cgi-bin/sentences.pl?acc=MI0001445
**** Sequence Databases and Data Sets
:PROPERTIES:
:ID:       C137CB28-0517-4A98-8FB4-6D312DDBC325
:END:
- https://tabula-muris.ds.czbiohub.org/
- [[http://www.mitomap.org/MITOMAP][MITOMAP human mitochondrial genome]]
- https://portal.gdc.cancer.gov/
- [[https://www.ebi.ac.uk/ega/datasets/EGAD00001000078][EBI Data Browser]]
- [[http://www.internationalgenome.org/sites/1000genomes.org/files/documents/1000genomes_browser_quickstart.pdf][100s genomes browser]]
- [[https://genome.ucsc.edu/training/vids/index.html#vid08][ucsc training videos]]
- [[http://useast.ensembl.org/info/website/tutorials/sequence.html][ensembl sequence tutorials]]
- General Feature Format (GFF) / GTF Annotation Files
  - [[http://genome.ucsc.edu/cgi-bin/hgTables?hgsid=494995959_n1VrbO9xpH51JE8qLga6fCvOyV2R&clade=mammal&org=Mouse&db=mm9&hgta_group=genes&hgta_track=refGene&hgta_table=0&hgta_regionType=genome&position=chr12%3A57795963-57815592&hgta_outputType=primaryTable&hgta_outFileName=][make your own]]
  - a tab-separated value file
  - see for standard: http://mblab.wustl.edu/GTF22.html

***** Generating Simulated Reads
:PROPERTIES:
:ID:       8877C684-C217-4E7C-8E19-3D972A4015B2
:END:

Generating Simulated Reads
First, we need a small set of sample read data. A number of tools, including ArtificialFastqGenerator, and SimSeq, will generate artificial or simulated sequence data for you. For this tutorial, I chose to use the wgsim tool (created by Heng Li, also the creator of SAMtools).

***** Stored on neuro server at G:/reference
:PROPERTIES:
:ID:       F08101C9-F675-4A35-B9A8-D0159FD74AFF
:END:

- mouse
  - gencode fa.gz
- human
  - hg38.fa and 

***** Genomes
:PROPERTIES:
:ID:       277AAE94-CFE5-400E-B5B9-291677A513D0
:END:

- [[https://www.biostars.org/p/4405/][reasons to avoid soft-masked genomes for alignment]]

****** Custom Genomes
:PROPERTIES:
:ID:       F5506BF8-8A6E-4949-9F5E-15B21511E87E
:END:

- No hits for "custom" in cite:star_2.5_dobin or cite:dobin2015mapping



https://www.biostars.org/p/111012/
http://mblab.wustl.edu/GTF2.html
http://useast.ensembl.org/info/website/upload/gff.html#fields
https://www.biostars.org/p/182230/
https://wiki.galaxyproject.org/Learn/CustomGenomes
http://wiki.bits.vib.be/index.php/Create_a_valid_gtf_file_for_tophat
https://support.bioconductor.org/p/66379/

******* Generating a Custom Genome
:PROPERTIES:
:ID:       11F1FF38-7F23-4B81-AEA3-AA760DC62C9F
:END:

******** Trial w/ EWSR1-FLLI1
:PROPERTIES:
:ID:       D293BED1-C843-476E-891B-E8FEFB4917F3
:END:

- Looking for help
  - no info
    - cite:beadling16_multip_amplic_approac_detec_gene
  - bad ideas
    - don't align to transcriptome- this doesn't save any time
    - don't try to make a gtf from a fa- the info isn't there
- Sequence sources
  - Genome- Downloaded GRCh37.85rm fasta from [[http://ftp.ensembl.org/pub/grch37/release-85/fasta/homo_sapiens/dna/][here]]
  - Fusions
    - from ensembl
      - [[http://useast.ensembl.org/Homo_sapiens/Transcript/Exons?db=core;g=ENSG00000182944;r=22:29268009-29300522;t=ENST00000332050][EWSR1 Exon 7]]
        - coord- 29,286,923	29,287,134	2	1	212
        - seq- CTATTCCTCTACACAGCCGACTAGTTATGATCAGAGCAGTTACTCTCAGCAGAACACCTATGGGCAACCGAGCAGCTATGGACAGCAGAGTAGCTATGGTCAACAAAGCAGCTATGGGCAGCAGCCTCCCACTAGTTACCCACCCCAAACTGGATCCTACAGCCAAGCTCCAAGTCAATATAGCCAACAGAGCAGCAGCTACGGGCAGCAGA
      - FLI1 exon - _complicated by multiple splice variants_
    - failed
      - not from UCSC (yet), it will output the whole gene sequence 
      - ?from bed files? 
      - EWSR1-FLI1 fusion sequence- COSMIC-Gene-Analysis-Fusions-by prevalance : http://cancer.sanger.ac.uk/cosmic/fusion/summary?id=166 
- Thought about splitting this to make a little genome to play with, but splits just get me way too many files, a lot with NNNNN only 
  - [[Split text file by percentage  the file from 533,942,310 lines to 10,000 lines- 53394 files
- Adding sequences to a fasta][Added fusion sequence programmatically

****** Human genome builds
:PROPERTIES:
:ID:       D0BD8791-0AE3-472E-A346-C0DD0D79AFD9
:END:

[[http://useast.ensembl.org/info/website/tutorials/grch37.html][for converting GRCh37 to GRCh38]]

https://www.biostars.org/p/113100/
The actual sequences you'll get from NCBI/UCSC/Ensembl will be identical, but their annotations will be different and (importantly) updated at different frequencies. NCBI's annotation is the "refseq" dataset (the "refGene" track in UCSC), which is essentially a subset of the UCSC and Ensembl annotations. UCSC's annotations are kind of a mess.

******* Ensembl GRCh37 fastas
:PROPERTIES:
:ID:       B6066026-81E3-49F3-9A0E-C5E610CB86AB
:END:

[[ftp://ftp.ensembl.org/pub/grch37/current/fasta/homo_sapiens/dna/README][Readme]]

hard masked- low complexity regions by RepeatMasker replaced with N's
soft masked- nucleotide replaced w/ lower case
https://www.biostars.org/p/122305/
[[https://groups.google.com/forum/#!topic/rna-star/2wdHXaPv_vU][Dobin suggests hard masking?]]

****** by Institute
:PROPERTIES:
:ID:       48D2EFA9-39A0-4D5F-8AFA-4726E9488D60
:END:

    - genome reference consortium
      - [[http://www.slideshare.net/GenomeRef][genome reference consortium presentations]]
      - [[http://www.ncbi.nlm.nih.gov/projects/genome/assembly/grc/human/][human genome overview]]

        GRC distributes the reference genome in two versions: one as contigs and the other as assembled chromosomes. The latter is in the "assembled_chromosome" directory. I do not know who are using the contigs, but nearly everyone I know use assembled chromosomes only.

        GRCh37/hg19 and GRCh38 are genome builds rather than annotations, which describe where features are in a given genome build. The actual sequences you'll get from NCBI/UCSC/Ensembl will be identical, but their annotations will be different and (importantly) updated at different frequencies. NCBI's annotation is the "refseq" dataset (the "refGene" track in UCSC), which is essentially a subset of the UCSC and Ensembl annotations. UCSC's annotations are kind of a mess. You'll find genes with the same ID on multiple strand and multiple chromosomes, which makes them a bit useless. Ensembl's annotations typically contain more features than UCSC (so a bit more noise), but they're otherwise much better put together (e.g., you'll never find a gene ID on different strand or different chromosomes) and their IDs are typically easier to map to other things (e.g., gene names, GO and pathway memberships). Ensembl also updates its annotation fairly often and versions everything nicely, so it's quite convenient to report what version you used in a paper (reproducibility is always a good thing). Given the choice, use the Ensembl annotation.

        BTW, don't forget that the various sources can use different names for chromosomes (e.g., chr1 in UCSC is just 1 in Ensembl), so don't mix and match them.

****** 37=hg19 sort of
:PROPERTIES:
:ID:       604441C8-6BCE-426F-9DE9-5D960F75C3D3
:END:

https://www.biostars.org/p/123767/
I believe the genomic content for the two is identical, except for the mitochondrial contig.

The contig names are also different. GRCh37 names them `chr1`, `chr2`,,`chr3`, etc, while hg19 just has `1`, `2`, `3`.

Thus you can use the same GTF file for both (excluding mitochondrial, of course) if you do a simple replace operation for the contig names.

https://wiki.dnanexus.com/Scientific-Notes/human-genome

****** [[http://www.ncbi.nlm.nih.gov/projects/genome/assembly/grc/mouse/][GRC GR/scratch/jeszyman/f/scratch/jeszyman/fishseq/set1/S14-43147_2_sequence.fastq ishseq/set1/S14-43147_2_sequence.fastq Cm38]]
:PROPERTIES:
:ID:       A57F0012-6870-4F79-92A3-C580DB1D33AD
:END:

****** [[http://useast.ensembl.org/info/data/ftp/index.html?redirect=no][Ensembl]]
:PROPERTIES:
:ID:       D18360E5-0B07-4AB6-92F6-D4B717A2E159
:END:

****** [[http://hgdownload.cse.ucsc.edu/downloads.html][UCSC goldenPath bigZips]]
:PROPERTIES:
:ID:       B94A8093-3229-41A6-92A6-104D03128BAE
:END:

******* [[http://hgdownload.cse.ucsc.edu/goldenPath/mm10/bigZips/][Mouse mm10]]
:PROPERTIES:
:ID:       D47888B2-1210-4C9D-B30C-81672143987A
:END:

******* [[http://hgdownload.cse.ucsc.edu/goldenPath/mm9/bigZips/][Mouse mm9]]
:PROPERTIES:
:ID:       68A22065-D788-4653-9BBC-2B5F67AD218A
:END:

******* [[http://hgdownload.cse.ucsc.edu/goldenPath/hg38/bigZips/][Human hg38]]
:PROPERTIES:
:ID:       687708C8-78BF-4EB9-8C48-F5456E9CF63D
:END:

******* [[http://hgdownload.cse.ucsc.edu/goldenPath/hg19/bigZips/][Human hg19]]
:PROPERTIES:
:ID:       B0449C36-57B8-4A2A-AE44-67C96C51706D
:END:

**** Clinical Fusion Protein Databases
:PROPERTIES:
:ID:       51EC0C78-7164-43CA-97B1-1FF2205B46A7
:END:

chimer- 
cite:Kim01012010

cite:wang2015fusioncancer

cite:korla2015fare

see Wellcome Trust db and Chimerdb 2.0- cite:scolnick2015efficient

**** Other Databases and Data Sets
:PROPERTIES:
:ID:       396F7A49-ACB4-4F81-8C73-ACC907207BB8
:END:

- mouse
  - [[http://www.informatics.jax.org/][Jackson Lab mouse genome informatics]]
  - [[http://web.stanford.edu/group/barres_lab/brain_rnaseq.html][mouse cerebral cortex RNA Seq database]]
  - mouse Ensembl genome files
- any
  - for datasets
  - GEO and SRA
  - [[http://www.ebi.ac.uk/arrayexpress/about.html][ArrayExpress]]

** Tools
:PROPERTIES:
:ID:       1b8bb7db-2622-47bd-bd6f-052cbd5d4fdb
:END:
- multiqc
  - - see for better multiqc handling- https://github.com/nextflow-io/rnaseq-nf/blob/3b5b49f/main.nf#L41-L48
- https://deeptools.readthedocs.io/en/latest/content/example_usage.html
- http://www.visantnet.org/visantnet.html
- rsem
  - https://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html#rsem
  - documentation
    - https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-12-323
    - https://github.com/ENCODE-DCC/long-rna-seq-pipeline/blob/master/DAC/STAR_RSEM.sh
    - http://deweylab.biostat.wisc.edu/rsem/rsem-calculate-expression.html
    - http://deweylab.biostat.wisc.edu/rsem/rsem-prepare-reference.html
    - https://deweylab.github.io/RSEM/rsem-calculate-expression.html
    - https://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html#rsem
- STAR
  - star-rsem pipeline
    - cite:djebali2016 
- https://bioconductor.org/packages/release/bioc/vignettes/AnnotationDbi/inst/doc/IntroToAnnotationPackages.pdf
- INTEGRATE
  - cite:zhang2016
    - [[http://apps.webofknowledge.com/summary.do?product=WOS&parentProduct=WOS&search_mode=CitingArticles&qid=2&SID=6ERcSCYD7iSBCZMtAM7&&page=1&action=changePageSize&pageSize=50][WOS citing]]- no cfRNA yet 
  - integrate
    - cite:zhang2017c
    - cite:zhang2016
    - cite:zhang2016a
    - cite:zhang2016a
    - - cite:zhang2014a
    - https://github.com/ChrisMaherLab/INTEGRATE-Vis/blob/master/README.md
    for integrate, see - cite:li2020
- https://github.com/Illumina/canvas
  - https://github.com/chrisamiller/copyCat
  - for cah https://bioconductor.org/packages/release/bioc/html/DNAcopy.html
- https://scvelo.readthedocs.io/
- https://cytotrace.stanford.edu/
- https://www.nature.com/articles/s41591-020-0844-1
- gistic2 
  - https://blindwith.science/2018/10/442.html/
  - http://crazyhottommy.blogspot.com/2017/11/run-gistic2-with-sequenza-segmentation.html
- complexheatmap
  - https://www.biostars.org/p/286187/#286507
- table
  | tool          | function         | input   | repo   | doc      | paper | paper(local)           |
  |---------------+------------------+---------+--------+----------+-------+------------------------|
  | annovar       |                  |         |        | [[http://annovar.openbioinformatics.org/en/latest/][doc]]      |       |                        |
  | Ballgown      |                  |         |        |          | [[https://www.nature.com/articles/nprot.2016.095][paper]] |                        |
  | BEDtools      |                  |         |        | [[http://bedtools.readthedocs.io/en/latest/][doc]]      |       | cite:quinlan2010       |
  | BLAT          |                  |         |        |          |       |                        |
  | BLAT          |                  |         |        |          |       |                        |
  | bowtie2       |                  |         | [[https://sourceforge.net/projects/bowtie-bio/files/][src]]    | [[http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#the-bowtie2-build-indexer][doc]]      |       |                        |
  | CNVkit        | copy#            | bam     | [[https://github.com/etal/cnvkit/tree/fd3555256d2a5aa3978c475d19c88065be68c6c4][repo]]   | [[https://cnvkit.readthedocs.io/en/stable/index.html][doc]]      | [[https://doi.org/10.1371/journal.pcbi.1004873][paper]] |                        |
  | data-slicer   |                  |         |        | [[http://www.1000genomes.org/data-slicer][site]]     |       |                        |
  | DESeq2        | diff express     |         |        |          |       | cite:love2014          |
  | edgeR         | diff express     |         |        | [[https://www.bioconductor.org/packages/release/bioc/vignettes/edgeR/inst/doc/edgeRUsersGuide.pdf][vignette]] |       | cite:robinson2010      |
  | FastQC        |                  |         |        | [[https://www.bioinformatics.babraham.ac.uk/projects/fastqc/INSTALL.txt][site]]     |       |                        |
  | featureCounts |                  |         |        |          | [[https://watermark.silverchair.com/btt656.pdf?token=AQECAHi208BE49Ooan9kkhW_Ercy7Dm3ZL_9Cf3qfKAc485ysgAAApgwggKUBgkqhkiG9w0BBwagggKFMIICgQIBADCCAnoGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMofurkoV2NWsQqlelAgEQgIICS7iktDnfv1X3fe1vdQQcXCS09zT549UGvBjDCLHoNebBGfiQi_Eo7ZjUHVH_Yay_p1DlFd4eDeXU4WEX6HTQ-MzPqmtZ6RMGegyEptsqxaLnvr3QfpGO6WRT01dViqp6xya9-CqCRGV3E7F37VruIYzZEFjr-2svIgoRydPyF4pkSzA2hkvwV_g-JT2YSnqboZ5DOGtwZXeMaLKf48_aEpuYemRUx8VqOfM8xnOm4_jumLGd_BBqCCv6brLX8z3WVJpWfJ4YfpJXhemFRt8mSvIsAe9pYXV52W7-psxHlM2ocXzdD_7vLSD7iy1NocDXWLFT5HRH_Cq8NyiRq1s4Mq-QYuvQJFlTxWArVC6vdpE40bDr9slGD6KTJ0DpUQeC52q-aoKJXr9Y7Pi2SDo881eFuJxTWuSuMjxcXStn9MkPKZfcKa10Vu4CdJSSnvJAKAvd4GsshsfCVGCvkgy4ZfEabo5nOZaB82UYC-8AZEpdbD3RtJg1FUQJHDz0tlY-2gZYf2VB3KU1JK4wZcHzn8T8R5BSChB6MjFrRdTZeo3M8-ZIK3eWQGH2vLj8_bPsYlBF-wfj2JzSG3zJGgUUa_rSBzoK8Vvw8k_BPxCq63h6u-k49l-X0o-MO6f8mOdm_YliTT0dWu_ujvlbXMw9AIBrKjwBJncq27EwMOX0shm8nnzPMoPTfOzoekZR2nYTDPayGjHhqkAs6haFAQrI8XAAd0PfbMtW4l54ArULWEH6hCVxzDX8_h8F8oWgOc_3h2ktpbTLNsiX6Bxj][paper]] |                        |
  | G2P           |                  |         |        |          | [[https://www.nature.com/articles/s41467-019-10016-3][paper]] |                        |
  | GAGE          | enrichment       | express |        |          | [[https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-10-161][paper]] |                        |
  | GATK          |                  |         |        | [[https://software.broadinstitute.org/gatk/documentation/][doc]]      |       |                        |
  | GISTIC2       | copy# diff       |         |        | [[http://portals.broadinstitute.org/cgi-bin/cancer/publications/pub_paper.cgi?mode=view&paper_id=216&p=t][site]]     |       |                        |
  | GSNAP         |                  | fastq   |        | [[http://research-pub.gene.com/gmap/src/README][doc]]      |       | cite:mathe2016         |
  | histat2       |                  | fastq   |        | [[https://ccb.jhu.edu/software/hisat2/manual.html][doc]]      |       |                        |
  | ichorCNA      | copy#            | wig     | [[https://github.com/broadinstitute/ichorCNA][repo]]   | [[https://github.com/broadinstitute/ichorCNA/wiki][doc]]      | [[https://www.nature.com/articles/s41467-017-00965-y][paper]] | cite:adalsteinsson2017 |
  | Integrate     | rna fusion       | bam     |        |          |       | cite:zhang2014a        |
  | limma         | diff express     | count   |        |          | [[https://watermark.silverchair.com/gkv007.pdf?token=AQECAHi208BE49Ooan9kkhW_Ercy7Dm3ZL_9Cf3qfKAc485ysgAAAngwggJ0BgkqhkiG9w0BBwagggJlMIICYQIBADCCAloGCSqGSIb3DQEHATAeBglghkgBZQMEAS4wEQQMsxpSKWbqcoVIkhKsAgEQgIICK5TpAPl6lIQcIzSDztcNMdIl7XMdgXJgXRQlmNqzapp-VoQO3DEpAj0A3gEkQVCd9nOl8fXA8LzO0zmzgs4TmLVFBlFXQULtTa78iYvLjQMrqnrGUZYTQus2SFXCNBklNaasJ9-iiedHl9iOT0lM_19o03zr27w2DmjK9KA9qaSt5tmBA1ogIonAO0xYwLodt7UqoDqjAMg5IXUTCrTRuzf79KhJisKQ_CYvgNTHNHNFce0wi9y-rB77jARN3HWmeziwtzLnUw2OyF9z_Wa0gwmjRScuNvUUms_fa9PCgTvrRDGFh40LEQmscM9nw3Tx3QG5qb6Z68BtikTY9WyhhKiOuJT3uwnU6EtJytzZrnfW2kYZHobN_iL7HA2qTfOXRlXC-uHXYX03m7TEasKRk6DEQ0ViBt71jyo5d0a6JDluWB2O7VDDexQuYloTkIOs2D3Vtmxu2RyDiXHeV2V1g6rZbNxNykour5ibcd0xJAeU_noEtLsvb-2cZzEHzablaAxvs3Lun_K6KQ3CYl71BEzyIVmAvvg_nkkz-QDLTfXc6CMpRU6086afrOVUKUnVfShtYRzZf3zsN6Uo0Chc3EV4kzZnnQL3qsVWoQyJd1erZRLenWSI_2o71qUbJ8JLxX-__XoNJeWkHXuNAe2ssdNWIwLg95wrkRyE40dFMbxh0MbuH3ky5qnNmiG5qrnq-kw4A3MTxMD-kmixUFx12gSIepksg__dGW9mPw][paper]] |                        |
  | MultiQC       | seq QC agg       |         | [[https://github.com/ewels/MultiQC][github]] | [[https://multiqc.info/docs/][doc]]      |       |                        |
  | picard        |                  |         |        | [[https://broadinstitute.github.io/picard/index.html][doc]]      |       |                        |
  | rnaseqc       | rnaseq qc        | bam     | [[https://github.com/broadinstitute/rnaseqc][repo]]   | [[https://github.com/broadinstitute/rnaseqc][repo]]     |       |                        |
  | rsem          | transcript quant | bam     | [[https://github.com/deweylab/RSEM][repo]]   |          | [[https://doi.org/10.1186/1471-2105-12-323][paper]] | cite:li2011            |
  | RSeQC         | rnaseq qc        | bam     |        | [[http://rseqc.sourceforge.net/][repo]]     | [[https://doi.org/10.1093/bioinformatics/bts356][paper]] | cite:wang2012          |
  | salmon        | transcript quat  |         |        |          |       |                        |
  | sambamba      |                  | bam     |        | [[http://lomereiter.github.io/sambamba/docs/sambamba-view.html][online]]   |       |                        |
  | samtools      |                  | bam     |        | [[http://www.htslib.org/doc/samtools.html][online]]   |       |                        |
  | seqtk         |                  |         | [[https://github.com/lh3/seqtk][github]] | [[https://github.com/lh3/seqtk/blob/master/README.md][README]]   | NA    | NA                     |
  | simNGS        | sim reads        | none    |        | [[https://www.ebi.ac.uk/goldman-srv/simNGS/][website]]  |       |                        |
  | STAR          |                  |         |        | [[https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf][doc]]      |       | cite:dobin2019         |
  | tophat2       |                  |         |        | [[https://ccb.jhu.edu/software/tophat/manual.html][doc]]      |       |                        |
  | tximport      |                  |         |        | [[https://bioconductor.org/packages/release/bioc/vignettes/tximport/inst/doc/tximport.html#rsem][doc]]      | [[http://dx.doi.org/10.12688/f1000research.7563.1][paper]] |                        |
  | WGCNA         |                  |         |        |          | [[https://doi.org/10.1186/1471-2105-9-559][paper]] | cite:langfelder2008    |
  |               |                  |         |        |          |       |                        |
*** ichorcna
:PROPERTIES:
:ID:       8c535c38-9310-4fd0-a8fe-c300639493da
:END:
- cite:klega2018
- cite:manier2018 
- cite:mouliere2018
- cite:stover2018
- cite:adalsteinsson2017
- [[https://github.com/broadinstitute/ichorCNA/wiki][documentation]]
  - https://github.com/broadinstitute/ichorCNA/wiki/Parameter-tuning-and-settings
- [[https://mail.google.com/mail/u/0/#inbox/FMfcgxwGDDjrSfkvnNDnxMlVJNFgfnfk][email from:Sundby re:ichor method]]
- https://www.biostars.org/local/search/page/?q=ichorcna 
*** wgcna
:PROPERTIES:
:ID:       948289d8-3a77-471a-b068-0507285e0bac
:END:
:LOGBOOK:
CLOCK: [2020-07-26 Sun 09:40]--[2020-07-26 Sun 10:43] =>  1:03
:END:
- https://www.nature.com/articles/nature16965#Sec1
- [[https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/][Horvath tutorials]]
  #+name:tutorial1-input
  #+begin_src R 
#=====================================================================================
#
#  Code chunk 1
#
#=====================================================================================


# Display the current working directory
getwd();
# If necessary, change the path below to the directory where the data files are stored. 
# "." means current directory. On Windows use a forward slash / instead of the usual \.
workingDir = ".";
setwd(workingDir); 
# Load the package
library(WGCNA);
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
#Read in the female liver data set
femData = read.csv("LiverFemale3600.csv");
# Read in the male liver data set
maleData = read.csv("LiverMale3600.csv");
# Take a quick look at what is in the data sets (caution, longish output):
dim(femData)
names(femData)
dim(maleData)
names(maleData)


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


# We work with two sets:
nSets = 2;
# For easier labeling of plots, create a vector holding descriptive names of the two sets.
setLabels = c("Female liver", "Male liver")
shortLabels = c("Female", "Male")
# Form multi-set expression data: columns starting from 9 contain actual expression data.
multiExpr = vector(mode = "list", length = nSets)

multiExpr[[1]] = list(data = as.data.frame(t(femData[-c(1:8)])));
names(multiExpr[[1]]$data) = femData$substanceBXH;
rownames(multiExpr[[1]]$data) = names(femData)[-c(1:8)];
multiExpr[[2]] = list(data = as.data.frame(t(maleData[-c(1:8)])));
names(multiExpr[[2]]$data) = maleData$substanceBXH;
rownames(multiExpr[[2]]$data) = names(maleData)[-c(1:8)];
# Check that the data has the correct format for many functions operating on multiple sets:
exprSize = checkSets(multiExpr)


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


# Check that all genes and samples have sufficiently low numbers of missing values.
gsg = goodSamplesGenesMS(multiExpr, verbose = 3);
gsg$allOK


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


if (!gsg$allOK)
{
  # Print information about the removed genes:
  if (sum(!gsg$goodGenes) > 0)
    printFlush(paste("Removing genes:", paste(names(multiExpr[[1]]$data)[!gsg$goodGenes], 
                                              collapse = ", ")))
  for (set in 1:exprSize$nSets)
  {
    if (sum(!gsg$goodSamples[[set]]))
      printFlush(paste("In set", setLabels[set], "removing samples",
                       paste(rownames(multiExpr[[set]]$data)[!gsg$goodSamples[[set]]], collapse = ", ")))
    # Remove the offending genes and samples
    multiExpr[[set]]$data = multiExpr[[set]]$data[gsg$goodSamples[[set]], gsg$goodGenes];
  }
  # Update exprSize
  exprSize = checkSets(multiExpr)
}


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


sampleTrees = list()
for (set in 1:nSets)
{
  sampleTrees[[set]] = hclust(dist(multiExpr[[set]]$data), method = "average")
}


#=====================================================================================
#
#  Code chunk 6
#
## #=====================================================================================


## pdf(file = "Plots/SampleClustering.pdf", width = 12, height = 12);
## par(mfrow=c(2,1))
## par(mar = c(0, 4, 2, 0))
## for (set in 1:nSets)
##   plot(sampleTrees[[set]], main = paste("Sample clustering on all genes in", setLabels[set]),
##        xlab="", sub="", cex = 0.7);
## dev.off();


#=====================================================================================
#
#  Code chunk 7
#
#=====================================================================================


# Choose the "base" cut height for the female data set
baseHeight = 16
# Adjust the cut height for the male data set for the number of samples
cutHeights = c(16, 16*exprSize$nSamples[2]/exprSize$nSamples[1]);
# Re-plot the dendrograms including the cut lines
## pdf(file = "Plots/SampleClustering.pdf", width = 12, height = 12);
## par(mfrow=c(2,1))
## par(mar = c(0, 4, 2, 0))
## for (set in 1:nSets)
## {
##   plot(sampleTrees[[set]], main = paste("Sample clustering on all genes in", setLabels[set]),
##        xlab="", sub="", cex = 0.7);
##   abline(h=cutHeights[set], col = "red");
## }
## dev.off();


#=====================================================================================
#
#  Code chunk 8
#
#=====================================================================================


for (set in 1:nSets)
{
  # Find clusters cut by the line
  labels = cutreeStatic(sampleTrees[[set]], cutHeight = cutHeights[set])
  # Keep the largest one (labeled by the number 1)
  keep = (labels==1)
  multiExpr[[set]]$data = multiExpr[[set]]$data[keep, ]
}
collectGarbage();
# Check the size of the leftover data
exprSize = checkSets(multiExpr)
exprSize


#=====================================================================================
#
#  Code chunk 9
#
#=====================================================================================


traitData = read.csv("ClinicalTraits.csv");
dim(traitData)
names(traitData)
# remove columns that hold information we do not need.
allTraits = traitData[, -c(31, 16)];
allTraits = allTraits[, c(2, 11:36) ];
# See how big the traits are and what are the trait and sample names
dim(allTraits)
names(allTraits)
allTraits$Mice
# Form a multi-set structure that will hold the clinical traits.
Traits = vector(mode="list", length = nSets);
for (set in 1:nSets)
{
  setSamples = rownames(multiExpr[[set]]$data);
  traitRows = match(setSamples, allTraits$Mice);
  Traits[[set]] = list(data = allTraits[traitRows, -1]);
  rownames(Traits[[set]]$data) = allTraits[traitRows, 1];
}
collectGarbage();
# Define data set dimensions
nGenes = exprSize$nGenes;
nSamples = exprSize$nSamples;


#=====================================================================================
#
#  Code chunk 10
#
#=====================================================================================


save(multiExpr, Traits, nGenes, nSamples, setLabels, shortLabels, exprSize, 
     file = "Consensus-dataInput.RData");


#+end_src

  #+name:tutorial2-auto-network-construct
  #+begin_src R 
#=====================================================================================
#
#  Code chunk 1
#
#=====================================================================================


# Display the current working directory
getwd();
# If necessary, change the path below to the directory where the data files are stored. 
# "." means current directory. On Windows use a forward slash / instead of the usual \.
workingDir = ".";
setwd(workingDir); 
# Load the WGCNA package
library(WGCNA)
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
# Allow multi-threading within WGCNA. 
# Caution: skip this line if you run RStudio or other third-party R environments.
# See note above.
enableWGCNAThreads()
# Load the data saved in the first part
lnames = load(file = "Consensus-dataInput.RData");
# The variable lnames contains the names of loaded variables.
lnames
# Get the number of sets in the multiExpr structure.
nSets = checkSets(multiExpr)$nSets


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


# Choose a set of soft-thresholding powers
powers = c(seq(4,10,by=1), seq(12,20, by=2));
# Initialize a list to hold the results of scale-free analysis
powerTables = vector(mode = "list", length = nSets);
# Call the network topology analysis function for each set in turn
for (set in 1:nSets)
  powerTables[[set]] = list(data = pickSoftThreshold(multiExpr[[set]]$data, powerVector=powers,
                                                     verbose = 2)[[2]]);
collectGarbage();
# Plot the results:
colors = c("black", "red")
# Will plot these columns of the returned scale free analysis tables
plotCols = c(2,5,6,7)
colNames = c("Scale Free Topology Model Fit", "Mean connectivity", "Median connectivity",
"Max connectivity");
# Get the minima and maxima of the plotted points
ylim = matrix(NA, nrow = 2, ncol = 4);
for (set in 1:nSets)
{
  for (col in 1:length(plotCols))
  {
    ylim[1, col] = min(ylim[1, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);
    ylim[2, col] = max(ylim[2, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);
  }
}
# Plot the quantities in the chosen columns vs. the soft thresholding power
## sizeGrWindow(8, 6)
## pdf(file = "Plots/scaleFreeAnalysis.pdf", wi = 8, he = 6)
## par(mfcol = c(2,2));
## par(mar = c(4.2, 4.2 , 2.2, 0.5))
## cex1 = 0.7;
## for (col in 1:length(plotCols)) for (set in 1:nSets)
## {
##   if (set==1)
##   {
##     plot(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],
##          xlab="Soft Threshold (power)",ylab=colNames[col],type="n", ylim = ylim[, col],
##          main = colNames[col]);
##     addGrid();
##   }
##   if (col==1)
##   {
##     text(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],
##          labels=powers,cex=cex1,col=colors[set]);
##   } else
##     text(powerTables[[set]]$data[,1], powerTables[[set]]$data[,plotCols[col]],
##          labels=powers,cex=cex1,col=colors[set]);
##   if (col==1)
##   {
##     legend("bottomright", legend = setLabels, col = colors, pch = 20) ;
##   } else
##     legend("topright", legend = setLabels, col = colors, pch = 20) ;
## }
## dev.off();


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


net = blockwiseConsensusModules(
        multiExpr, power = 6, minModuleSize = 30, deepSplit = 2,
        pamRespectsDendro = FALSE, 
        mergeCutHeight = 0.25, numericLabels = TRUE,
        minKMEtoStay = 0,
        saveTOMs = TRUE, verbose = 5)


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


consMEs = net$multiMEs;
moduleLabels = net$colors;
# Convert the numeric labels to color labels
moduleColors = labels2colors(moduleLabels)
consTree = net$dendrograms[[1]]; 


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


## sizeGrWindow(8,6);
## pdf(file = "Plots/ConsensusDendrogram-auto.pdf", wi = 8, he = 6)
## plotDendroAndColors(consTree, moduleColors,
##                     "Module colors",
##                     dendroLabels = FALSE, hang = 0.03,
##                     addGuide = TRUE, guideHang = 0.05,
##                     main = "Consensus gene dendrogram and module colors")

## dev.off()


#=====================================================================================
#
#  Code chunk 6
#
#=====================================================================================


save(consMEs, moduleLabels, moduleColors, consTree, file = "Consensus-NetworkConstruction-auto.RData")


#+end_src

  #+name:tutorial3-relate-clinical-data
  #+begin_src R 
#=====================================================================================
#
#  Code chunk 1
#
#=====================================================================================


# Display the current working directory
getwd();
# If necessary, change the path below to the directory where the data files are stored. 
# "." means current directory. On Windows use a forward slash / instead of the usual \.
workingDir = ".";
setwd(workingDir); 
# Load the WGCNA package
library(WGCNA)
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
# Load the expression and trait data saved in the first part
lnames = load(file = "FemaleLiver-01-dataInput.RData");
#The variable lnames contains the names of loaded variables.
lnames
# Load network data saved in the second part.
lnames = load(file = "FemaleLiver-02-networkConstruction-auto.RData");
lnames


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


# Define numbers of genes and samples
nGenes = ncol(datExpr);
nSamples = nrow(datExpr);
# Recalculate MEs with color labels
MEs0 = moduleEigengenes(datExpr, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
moduleTraitCor = cor(MEs, datTraits, use = "p");
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, nSamples);


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


sizeGrWindow(10,6)
# Will display correlations and their p-values
textMatrix =  paste(signif(moduleTraitCor, 2), "\n(",
                           signif(moduleTraitPvalue, 1), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor)
par(mar = c(6, 8.5, 3, 3));
# Display the correlation values within a heatmap plot
labeledHeatmap(Matrix = moduleTraitCor,
               xLabels = names(datTraits),
               yLabels = names(MEs),
               ySymbols = names(MEs),
               colorLabels = FALSE,
               colors = greenWhiteRed(50),
               textMatrix = textMatrix,
               setStdMargins = FALSE,
               cex.text = 0.5,
               zlim = c(-1,1),
               main = paste("Module-trait relationships"))


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


# Define variable weight containing the weight column of datTrait
weight = as.data.frame(datTraits$weight_g);
names(weight) = "weight"
# names (colors) of the modules
modNames = substring(names(MEs), 3)

geneModuleMembership = as.data.frame(cor(datExpr, MEs, use = "p"));
MMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), nSamples));

names(geneModuleMembership) = paste("MM", modNames, sep="");
names(MMPvalue) = paste("p.MM", modNames, sep="");

geneTraitSignificance = as.data.frame(cor(datExpr, weight, use = "p"));
GSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), nSamples));

names(geneTraitSignificance) = paste("GS.", names(weight), sep="");
names(GSPvalue) = paste("p.GS.", names(weight), sep="");


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


module = "brown"
column = match(module, modNames);
moduleGenes = moduleColors==module;

sizeGrWindow(7, 7);
par(mfrow = c(1,1));
verboseScatterplot(abs(geneModuleMembership[moduleGenes, column]),
                   abs(geneTraitSignificance[moduleGenes, 1]),
                   xlab = paste("Module Membership in", module, "module"),
                   ylab = "Gene significance for body weight",
                   main = paste("Module membership vs. gene significance\n"),
                   cex.main = 1.2, cex.lab = 1.2, cex.axis = 1.2, col = module)


#=====================================================================================
#
#  Code chunk 6
#
#=====================================================================================


names(datExpr)


#=====================================================================================
#
#  Code chunk 7
#
#=====================================================================================


names(datExpr)[moduleColors=="brown"]


#=====================================================================================
#
#  Code chunk 8
#
#=====================================================================================


annot = read.csv(file = "GeneAnnotation.csv");
dim(annot)
names(annot)
probes = names(datExpr)
probes2annot = match(probes, annot$substanceBXH)
# The following is the number or probes without annotation:
sum(is.na(probes2annot))
# Should return 0.


#=====================================================================================
#
#  Code chunk 9
#
#=====================================================================================


# Create the starting data frame
geneInfo0 = data.frame(substanceBXH = probes,
                      geneSymbol = annot$gene_symbol[probes2annot],
                      LocusLinkID = annot$LocusLinkID[probes2annot],
                      moduleColor = moduleColors,
                      geneTraitSignificance,
                      GSPvalue)
# Order modules by their significance for weight
modOrder = order(-abs(cor(MEs, weight, use = "p")));
# Add module membership information in the chosen order
for (mod in 1:ncol(geneModuleMembership))
{
  oldNames = names(geneInfo0)
  geneInfo0 = data.frame(geneInfo0, geneModuleMembership[, modOrder[mod]], 
                         MMPvalue[, modOrder[mod]]);
  names(geneInfo0) = c(oldNames, paste("MM.", modNames[modOrder[mod]], sep=""),
                       paste("p.MM.", modNames[modOrder[mod]], sep=""))
}
# Order the genes in the geneInfo variable first by module color, then by geneTraitSignificance
geneOrder = order(geneInfo0$moduleColor, -abs(geneInfo0$GS.weight));
geneInfo = geneInfo0[geneOrder, ]


#=====================================================================================
#
#  Code chunk 10
#
#=====================================================================================


write.csv(geneInfo, file = "geneInfo.csv")


#+end_src
- https://rstudio-pubs-static.s3.amazonaws.com/90587_39301ea4b9514d20880b4c9cda81ca4f.html
- https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/
- https://pdfs.semanticscholar.org/7a4a/c56e7d90b48ffda2ff267f9a84072940726b.pdf?_ga=2.194670125.1809056038.1595426853-2099730291.1595426853
- [[https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/][author tutorials]]
- [[https://www.biostars.org/local/search/page/?q=wgcna][wgcna biostars]]
- oldcode
  #+name: 
  #+begin_src bash 
wget \
    -P /tmp/ \
    -c \
    - N \
    https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/FemaleLiver-Data.zip
unzip /tmp/FemaleLiver-Data.zip 

wget \
    -P /tmp/ \
    -c \
    - N \
    https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/MaleLiver-Data.zip
unzip /tmp/MaleLiver-Data.zip
#+end_src

  #+begin_src R 
# Tutorial 1
#
setwd("/tmp")
library(WGCNA)
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
#Read in the female liver data set
femData = read.csv("LiverFemale3600.csv");
# Read in the male liver data set
maleData = read.csv("LiverMale3600.csv");
# Take a quick look at what is in the data sets (caution, longish output):
dim(femData)
names(femData)
dim(maleData)
names(maleData)


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


# We work with two sets:
nSets = 2;
# For easier labeling of plots, create a vector holding descriptive names of the two sets.
setLabels = c("Female liver", "Male liver")
shortLabels = c("Female", "Male")
# Form multi-set expression data: columns starting from 9 contain actual expression data.
multiExpr = vector(mode = "list", length = nSets)

multiExpr[[1]] = list(data = as.data.frame(t(femData[-c(1:8)])));
names(multiExpr[[1]]$data) = femData$substanceBXH;
rownames(multiExpr[[1]]$data) = names(femData)[-c(1:8)];
multiExpr[[2]] = list(data = as.data.frame(t(maleData[-c(1:8)])));
names(multiExpr[[2]]$data) = maleData$substanceBXH;
rownames(multiExpr[[2]]$data) = names(maleData)[-c(1:8)];
# Check that the data has the correct format for many functions operating on multiple sets:
exprSize = checkSets(multiExpr)


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


# Check that all genes and samples have sufficiently low numbers of missing values.
gsg = goodSamplesGenesMS(multiExpr, verbose = 3);
gsg$allOK


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


if (!gsg$allOK)
{
  # Print information about the removed genes:
  if (sum(!gsg$goodGenes) > 0)
    printFlush(paste("Removing genes:", paste(names(multiExpr[[1]]$data)[!gsg$goodGenes], 
                                              collapse = ", ")))
  for (set in 1:exprSize$nSets)
  {
    if (sum(!gsg$goodSamples[[set]]))
      printFlush(paste("In set", setLabels[set], "removing samples",
                       paste(rownames(multiExpr[[set]]$data)[!gsg$goodSamples[[set]]], collapse = ", ")))
    # Remove the offending genes and samples
    multiExpr[[set]]$data = multiExpr[[set]]$data[gsg$goodSamples[[set]], gsg$goodGenes];
  }
  # Update exprSize
  exprSize = checkSets(multiExpr)
}


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


sampleTrees = list()
for (set in 1:nSets)
{
  sampleTrees[[set]] = hclust(dist(multiExpr[[set]]$data), method = "average")
}


#=====================================================================================
#
#  Code chunk 6
#
#=====================================================================================


## pdf(file = "Plots/SampleClustering.pdf", width = 12, height = 12);
## par(mfrow=c(2,1))
## par(mar = c(0, 4, 2, 0))
## for (set in 1:nSets)
##   plot(sampleTrees[[set]], main = paste("Sample clustering on all genes in", setLabels[set]),
##        xlab="", sub="", cex = 0.7);
## dev.off();


#=====================================================================================
#
#  Code chunk 7
#
#=====================================================================================


# Choose the "base" cut height for the female data set
baseHeight = 16
# Adjust the cut height for the male data set for the number of samples
cutHeights = c(16, 16*exprSize$nSamples[2]/exprSize$nSamples[1]);
# Re-plot the dendrograms including the cut lines
pdf(file = "Plots/SampleClustering.pdf", width = 12, height = 12);
par(mfrow=c(2,1))
par(mar = c(0, 4, 2, 0))
for (set in 1:nSets)
{
  plot(sampleTrees[[set]], main = paste("Sample clustering on all genes in", setLabels[set]),
       xlab="", sub="", cex = 0.7);
  abline(h=cutHeights[set], col = "red");
}
dev.off();


#=====================================================================================
#
#  Code chunk 8
#
#=====================================================================================


for (set in 1:nSets)
{
  # Find clusters cut by the line
  labels = cutreeStatic(sampleTrees[[set]], cutHeight = cutHeights[set])
  # Keep the largest one (labeled by the number 1)
  keep = (labels==1)
  multiExpr[[set]]$data = multiExpr[[set]]$data[keep, ]
}
collectGarbage();
# Check the size of the leftover data
exprSize = checkSets(multiExpr)
exprSize


#=====================================================================================
#
#  Code chunk 9
#
#=====================================================================================


traitData = read.csv("ClinicalTraits.csv");
dim(traitData)
names(traitData)
# remove columns that hold information we do not need.
allTraits = traitData[, -c(31, 16)];
allTraits = allTraits[, c(2, 11:36) ];
# See how big the traits are and what are the trait and sample names
dim(allTraits)
names(allTraits)
allTraits$Mice
# Form a multi-set structure that will hold the clinical traits.
Traits = vector(mode="list", length = nSets);
for (set in 1:nSets)
{
  setSamples = rownames(multiExpr[[set]]$data);
  traitRows = match(setSamples, allTraits$Mice);
  Traits[[set]] = list(data = allTraits[traitRows, -1]);
  rownames(Traits[[set]]$data) = allTraits[traitRows, 1];
}
collectGarbage();
# Define data set dimensions
nGenes = exprSize$nGenes;
nSamples = exprSize$nSamples;


#=====================================================================================
#
#  Code chunk 10
#
#=====================================================================================


save(multiExpr, Traits, nGenes, nSamples, setLabels, shortLabels, exprSize, 
     file = "Consensus-dataInput.RData");

femData = read.csv("./LiverFemale3600.csv", stringsAsFactors = F)
datExpr0 = as.data.frame(t(femData[, -c(1:8)]))
names(datExpr0) = femData$substanceBXH
rownames(datExpr0) = names(femData)[-c(1:8)]
#
gsg=goodSamplesGenes(datExpr0)
if (!gsg$allOK)
{
# Optionally, print the gene and sample names that were removed:
if (sum(!gsg$goodGenes)>0)
printFlush(paste("Removing genes:", paste(names(datExpr0)[!gsg$goodGenes], collapse = ", ")));
if (sum(!gsg$goodSamples)>0)
printFlush(paste("Removing samples:", paste(rownames(datExpr0)[!gsg$goodSamples], collapse = ", ")));
# Remove the offending genes and samples from the data:
datExpr0 = datExpr0[gsg$goodSamples, gsg$goodGenes]
}
sampleTree = hclust(dist(datExpr0), method = "average");
clust = cutreeStatic(sampleTree, cutHeight = 15, minSize = 10)
table(clust)
# clust 1 contains the samples we want to keep.
keepSamples = (clust==1)
datExpr = datExpr0[keepSamples, ]
nGenes = ncol(datExpr)
nSamples = nrow(datExpr)
#
traitData = read.csv("./ClinicalTraits.csv")
allTraits = traitData[,-c(31,16)]
allTraits = allTraits[, c(2,11:36)]
#
femaleSamples = rownames(datExpr)
traitRows= match(femaleSamples, allTraits$Mice)
datTraits = allTraits[traitRows, -1]
rownames(datTraits) = allTraits[traitRows, 1]
collectGarbage()
#
#
save(datExpr, datTraits, file = "FemaleLiver-01-dataInput.RData")
#
traitData = read.csv("ClinicalTraits.csv");
dim(traitData)
names(traitData)
# remove columns that hold information we do not need.
allTraits = traitData[, -c(31, 16)];
allTraits = allTraits[, c(2, 11:36) ];
# See how big the traits are and what are the trait and sample names
dim(allTraits)
names(allTraits)
allTraits$Mice
# Form a multi-set structure that will hold the clinical traits.
Traits = vector(mode="list", length = nSets);
for (set in 1:nSets)
{
setSamples = rownames(multiExpr[[set]]$data);
traitRows = match(setSamples, allTraits$Mice);
Traits[[set]] = list(data = allTraits[traitRows, -1]);
rownames(Traits[[set]]$data) = allTraits[traitRows, 1];
}
collectGarbage();
# Define data set dimensions
nGenes = exprSize$nGenes;
nSamples = exprSize$nSamples;
save(multiExpr, Traits, nGenes, nSamples, setLabels, shortLabels, exprSize,
file = "Consensus-dataInput.RData");
# Tutorial 2
options(stringsAsFactors = F)
enableWGCNAThreads()
lnames=load(file="./FemaleLiver-01-dataInput.RData")
lnames
#
(powers=c(c(1:10), seq(from = 12, to = 20, by = 2)))
sft = pickSoftThreshold(datExpr, powerVector = powers, verbose = 5)
# Plot the results:
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
cex1 = 0.9;
# Scale-free topology fit index as a function of the soft-thresholding power
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
labels=powers,cex=cex1,col="red");
# this line corresponds to using an R^2 cut-off of h
abline(h=0.90,col="red")
# Mean connectivity as a function of the soft-thresholding power
plot(sft$fitIndices[,1], sft$fitIndices[,5],
xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
#
net = blockwiseModules(datExpr, power = 6,
TOMType = "unsigned", minModuleSize = 30,
reassignThreshold = 0, mergeCutHeight = 0.25,
numericLabels = TRUE, pamRespectsDendro = FALSE,
saveTOMs = TRUE,
saveTOMFileBase = "femaleMouseTOM",
verbose = 3)
#
# open a graphics window
sizeGrWindow(12, 9)
# Convert labels to colors for plotting
mergedColors = labels2colors(net$colors)
# Plot the dendrogram and the module colors underneath
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],
"Module colors",
dendroLabels = FALSE, hang = 0.03,
addGuide = TRUE, guideHang = 0.05)
#
moduleLabels = net$colors
moduleColors = labels2colors(net$colors)
MEs = net$MEs;
geneTree = net$dendrograms[[1]];
save(MEs, moduleLabels, moduleColors, geneTree,
file = "FemaleLiver-02-networkConstruction-auto.RData")
#
consMEs = net$multiMEs
moduleLabels = net$colors
moduleColors = labels2colors(moduleLabels)
consTree = net$dendrograms[[1]]
save(consMEs, moduleLabels, moduleColors, consTree, file = "Consensus-NetworkConstruction-auto.RData")

#=====================================================================================
#
#  Code chunk 1
#
#=====================================================================================


# Display the current working directory
getwd();
# If necessary, change the path below to the directory where the data files are stored. 
# "." means current directory. On Windows use a forward slash / instead of the usual \.
workingDir = ".";
setwd(workingDir); 
# Load the WGCNA package
library(WGCNA)
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
# Allow multi-threading within WGCNA. 
# Caution: skip this line if you run RStudio or other third-party R environments.
# See note above.
enableWGCNAThreads()
# Load the data saved in the first part
lnames = load(file = "Consensus-dataInput.RData");
#The variable lnames contains the names of loaded variables.
lnames
# Get the number of sets in the multiExpr structure.
nSets = checkSets(multiExpr)$nSets


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


# Choose a set of soft-thresholding powers
powers = c(seq(4,10,by=1), seq(12,20, by=2));
# Initialize a list to hold the results of scale-free analysis
powerTables = vector(mode = "list", length = nSets);
# Call the network topology analysis function for each set in turn
for (set in 1:nSets)
  powerTables[[set]] = list(data = pickSoftThreshold(multiExpr[[set]]$data, powerVector=powers,
                                                     verbose = 2)[[2]]);
collectGarbage();
# Plot the results:
colors = c("black", "red")
# Will plot these columns of the returned scale free analysis tables
plotCols = c(2,5,6,7)
colNames = c("Scale Free Topology Model Fit", "Mean connectivity", "Median connectivity",
"Max connectivity");
# Get the minima and maxima of the plotted points
ylim = matrix(NA, nrow = 2, ncol = 4);
for (set in 1:nSets)
{
  for (col in 1:length(plotCols))
  {
    ylim[1, col] = min(ylim[1, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);
    ylim[2, col] = max(ylim[2, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);
  }
}
# Plot the quantities in the chosen columns vs. the soft thresholding power
sizeGrWindow(8, 6)
par(mfcol = c(2,2));
par(mar = c(4.2, 4.2 , 2.2, 0.5))
cex1 = 0.7;
for (col in 1:length(plotCols)) for (set in 1:nSets)
{
  if (set==1)
  {
    plot(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],
         xlab="Soft Threshold (power)",ylab=colNames[col],type="n", ylim = ylim[, col],
         main = colNames[col]);
    addGrid();
  }
  if (col==1)
  {
    text(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],
         labels=powers,cex=cex1,col=colors[set]);
  } else
    text(powerTables[[set]]$data[,1], powerTables[[set]]$data[,plotCols[col]],
         labels=powers,cex=cex1,col=colors[set]);
  if (col==1)
  {
    legend("bottomright", legend = setLabels, col = colors, pch = 20) ;
  } else
    legend("topright", legend = setLabels, col = colors, pch = 20) ;
}


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


softPower = 6;
# Initialize an appropriate array to hold the adjacencies
adjacencies = array(0, dim = c(nSets, nGenes, nGenes));
# Calculate adjacencies in each individual data set
for (set in 1:nSets)
  adjacencies[set, , ] = abs(cor(multiExpr[[set]]$data, use = "p"))^softPower;


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


# Initialize an appropriate array to hold the TOMs
TOM = array(0, dim = c(nSets, nGenes, nGenes));
# Calculate TOMs in each individual data set
for (set in 1:nSets)
  TOM[set, , ] = TOMsimilarity(adjacencies[set, , ]);


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


# Define the reference percentile
scaleP = 0.95
# Set RNG seed for reproducibility of sampling
set.seed(12345)
# Sample sufficiently large number of TOM entries
nSamples = as.integer(1/(1-scaleP) * 1000);
# Choose the sampled TOM entries
scaleSample = sample(nGenes*(nGenes-1)/2, size = nSamples)
TOMScalingSamples = list();
# These are TOM values at reference percentile
scaleQuant = rep(1, nSets)
# Scaling powers to equalize reference TOM values
scalePowers = rep(1, nSets)
# Loop over sets
for (set in 1:nSets)
{
  # Select the sampled TOM entries
  TOMScalingSamples[[set]] = as.dist(TOM[set, , ])[scaleSample]
  # Calculate the 95th percentile
  scaleQuant[set] = quantile(TOMScalingSamples[[set]],
                             probs = scaleP, type = 8);
  # Scale the male TOM
  if (set>1)
  {
    scalePowers[set] = log(scaleQuant[1])/log(scaleQuant[set]);
    TOM[set, ,] = TOM[set, ,]^scalePowers[set];
  }
}


#=====================================================================================
#
#  Code chunk 6
#
#=====================================================================================


# For plotting, also scale the sampled TOM entries
scaledTOMSamples = list();
for (set in 1:nSets)
  scaledTOMSamples[[set]] = TOMScalingSamples[[set]]^scalePowers[set]
# Open a suitably sized graphics window
sizeGrWindow(6,6)
pdf(file = "Plots/TOMScaling-QQPlot.pdf", wi = 6, he = 6);
# qq plot of the unscaled samples
qqUnscaled = qqplot(TOMScalingSamples[[1]], TOMScalingSamples[[2]], plot.it = TRUE, cex = 0.6,
                    xlab = paste("TOM in", setLabels[1]), ylab = paste("TOM in", setLabels[2]),
                    main = "Q-Q plot of TOM", pch = 20)
# qq plot of the scaled samples
qqScaled = qqplot(scaledTOMSamples[[1]], scaledTOMSamples[[2]], plot.it = FALSE)
points(qqScaled$x, qqScaled$y, col = "red", cex = 0.6, pch = 20);
abline(a=0, b=1, col = "blue")
legend("topleft", legend = c("Unscaled TOM", "Scaled TOM"), pch = 20, col = c("black", "red"))
dev.off();


#=====================================================================================
#
#  Code chunk 7
#
#=====================================================================================


consensusTOM = pmin(TOM[1, , ], TOM[2, , ]);


#=====================================================================================
#
#  Code chunk 8
#
#=====================================================================================


# Clustering
consTree = hclust(as.dist(1-consensusTOM), method = "average");
# We like large modules, so we set the minimum module size relatively high:
minModuleSize = 30;
# Module identification using dynamic tree cut:
unmergedLabels = cutreeDynamic(dendro = consTree, distM = 1-consensusTOM,
                deepSplit = 2, cutHeight = 0.995,
                minClusterSize = minModuleSize,
                pamRespectsDendro = FALSE );
unmergedColors = labels2colors(unmergedLabels)


#=====================================================================================
#
#  Code chunk 9
#
#=====================================================================================


sizeGrWindow(8,6)
plotDendroAndColors(consTree, unmergedColors, "Dynamic Tree Cut",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)


#=====================================================================================
#
#  Code chunk 10
#
#=====================================================================================


# Calculate module eigengenes
unmergedMEs = multiSetMEs(multiExpr, colors = NULL, universalColors = unmergedColors)
# Calculate consensus dissimilarity of consensus module eigengenes
consMEDiss = consensusMEDissimilarity(unmergedMEs);
# Cluster consensus modules
consMETree = hclust(as.dist(consMEDiss), method = "average");
# Plot the result
sizeGrWindow(7,6)
par(mfrow = c(1,1))
plot(consMETree, main = "Consensus clustering of consensus module eigengenes",
     xlab = "", sub = "")
abline(h=0.25, col = "red")


#=====================================================================================
#
#  Code chunk 11
#
#=====================================================================================


merge = mergeCloseModules(multiExpr, unmergedLabels, cutHeight = 0.25, verbose = 3)


#=====================================================================================
#
#  Code chunk 12
#
#=====================================================================================


# Numeric module labels
moduleLabels = merge$colors;
# Convert labels to colors
moduleColors = labels2colors(moduleLabels)
# Eigengenes of the new merged modules:
consMEs = merge$newMEs;


#=====================================================================================
#
#  Code chunk 13
#
#=====================================================================================


sizeGrWindow(9,6)
plotDendroAndColors(consTree, cbind(unmergedColors, moduleColors),
                    c("Unmerged", "Merged"),
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)


#=====================================================================================
#
#  Code chunk 14
#
#=====================================================================================


save(consMEs, moduleColors, moduleLabels, consTree, file = "Consensus-NetworkConstruction-man.RData")


#
#=====================================================================================
#
#  Code chunk 1
#
#=====================================================================================


# Display the current working directory
getwd();
# If necessary, change the path below to the directory where the data files are stored. 
# "." means current directory. On Windows use a forward slash / instead of the usual \.
workingDir = ".";
setwd(workingDir); 
# Load the WGCNA package
library(WGCNA)
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
# Load the data saved in the first part
lnames = load(file = "Consensus-dataInput.RData");
#The variable lnames contains the names of loaded variables.
lnames
# Load the results of network analysis, tutorial part 2.a
lnames = load(file = "Consensus-NetworkConstruction-auto.RData");
lnames


#=====================================================================================
#
#  Code chunk 2
#
#=====================================================================================


lnames = load("../Mouse-Female/FemaleLiver-02-networkConstruction-auto.RData")
lnames
# Rename variables to avoid conflicts
femaleLabels = moduleLabels;
femaleColors = moduleColors;
femaleTree = geneTree;
femaleMEs = orderMEs(MEs, greyName = "ME0");


#=====================================================================================
#
#  Code chunk 3
#
#=====================================================================================


lnames = load("Consensus-NetworkConstruction-auto.RData")
lnames


#=====================================================================================
#
#  Code chunk 4
#
#=====================================================================================


# Isolate the module labels in the order they appear in ordered module eigengenes
femModuleLabels = substring(names(femaleMEs), 3)
consModuleLabels = substring(names(consMEs[[1]]$data), 3)
# Convert the numeric module labels to color labels
femModules = labels2colors(as.numeric(femModuleLabels))
consModules = labels2colors(as.numeric(consModuleLabels))
# Numbers of female and consensus modules
nFemMods = length(femModules)
nConsMods = length(consModules)
# Initialize tables of p-values and of the corresponding counts
pTable = matrix(0, nrow = nFemMods, ncol = nConsMods);
CountTbl = matrix(0, nrow = nFemMods, ncol = nConsMods);
# Execute all pairwaise comparisons
for (fmod in 1:nFemMods)
  for (cmod in 1:nConsMods)
  {
    femMembers = (femaleColors == femModules[fmod]);
    consMembers = (moduleColors == consModules[cmod]);
    pTable[fmod, cmod] = -log10(fisher.test(femMembers, consMembers, alternative = "greater")$p.value);
    CountTbl[fmod, cmod] = sum(femaleColors == femModules[fmod] & moduleColors ==
                      consModules[cmod])
  }


#=====================================================================================
#
#  Code chunk 5
#
#=====================================================================================


# Truncate p values smaller than 10^{-50} to 10^{-50} 
pTable[is.infinite(pTable)] = 1.3*max(pTable[is.finite(pTable)]);
pTable[pTable>50 ] = 50 ;
# Marginal counts (really module sizes)
femModTotals = apply(CountTbl, 1, sum)
consModTotals = apply(CountTbl, 2, sum)
# Actual plotting
sizeGrWindow(10,7 );
pdf(file = "Plots/ConsensusVsFemaleModules.pdf", wi = 10, he = 7);
par(mfrow=c(1,1));
par(cex = 1.0);
par(mar=c(8, 10.4, 2.7, 1)+0.3);
# Use function labeledHeatmap to produce the color-coded table with all the trimmings
labeledHeatmap(Matrix = pTable,
               xLabels = paste(" ", consModules),
               yLabels = paste(" ", femModules),
               colorLabels = TRUE,
               xSymbols = paste("Cons ", consModules, ": ", consModTotals, sep=""),
               ySymbols = paste("Fem ", femModules, ": ", femModTotals, sep=""),
               textMatrix = CountTbl,
               colors = greenWhiteRed(100)[50:100],
               main = "Correspondence of Female set-specific and Female-Male consensus modules",
               cex.text = 1.0, cex.lab = 1.0, setStdMargins = FALSE);
dev.off();


# Tutorial 3: relating consensus modules to set-specific modules
# The following setting is important, do not omit.
options(stringsAsFactors = FALSE);
# Load the data saved in the first part
#lnames = load(file = "Consensus-dataInput.RData");
#The variable lnames contains the names of loaded variables.
#lnames
# Load the results of network analysis, tutorial part 2.a
lnames = load(file = "Consensus-NetworkConstruction-auto.RData");
lnames
femaleLabels=moduleLabels
femaleColors = moduleColors
femaleTree = geneTree
femaleMEs = orderMEs(MEs, greyName = "MEO")
#
# Isolate the module labels in the order they appear in ordered module eigengenes
femModuleLabels = substring(names(femaleMEs), 3)
consModuleLabels = substring(names(consMEs[[1]]$data), 3)
# Convert the numeric module labels to color labels
femModules = labels2colors(as.numeric(femModuleLabels))
consModules = labels2colors(as.numeric(consModuleLabels))
# Numbers of female and consensus modules
nFemMods = length(femModules)
nConsMods = length(consModules)
# Initialize tables of p-values and of the corresponding counts
pTable = matrix(0, nrow = nFemMods, ncol = nConsMods);
CountTbl = matrix(0, nrow = nFemMods, ncol = nConsMods);
# Execute all pairwaise comparisons
for (fmod in 1:nFemMods)
for (cmod in 1:nConsMods)
{
femMembers = (femaleColors == femModules[fmod]);
consMembers = (moduleColors == consModules[cmod]);
pTable[fmod, cmod] = -log10(fisher.test(femMembers, consMembers, alternative = "greater")$p.value);
CountTbl[fmod, cmod] = sum(femaleColors == femModules[fmod] & moduleColors ==
consModules[cmod])
}
#+end_src



** Reference 
:PROPERTIES:
:CREATED:  [2020-04-23 Thu 08:54]
:END:
- good github repos
  - https://github.com/ding-labrecip
  - https://github.com/pstew
- old docker setup code
  #########1#########2#########3#########4#########5#########6#########7#########8
  # DEV
  # check if inside docker
  # if [ -f /.dockerenv ];then 
  #     dockercontainer=yes
  #     echo "Your are in a docker container"    
  # else 
  #     dockercontainer=no
  #     echo "Not in docker"
  #     # setup NON-docker variables 
  #     shopt -s nocasematch
  #     case $HOSTNAME in
  #         (radonc-cancerbio) server_home="/home/jeszyman" ;;
  #         (jeszyman-*) server_home="/home/jeszyman" ;;
  #         (acl*) server_home="/home/jszymanski" ;; 
  #         (virtual-workstation*.gsc.wustl.edu) server_home="/gscuser/szymanski" ;;
  #         (blade*.gsc.wustl.edu) server_home="/gscuser/szymanski" ;;
  #     esac
  #     
  #     localdata="$server_home/data/$project/"
  #     unset $SERVER
  # fi
  #
  # case $dockercontainer in
  #     (yes) server_ask ;;
  #     (no) ;;
  # esac
  # #
  # case $SERVER in
  #     (chaudhuri-roche) projectdir=/drive3/users/jszymanski/repos/$project
  #                       localdata=/drive3/users/jszymanski/data/$project;;
  #     (NA) ;;
  # esac
  # #
  # # test data on cancerbio
  #NOT GENERAL
  #basedir=/media/jeszyman/4edbbc27-7e29-4667-9b24-f5a56d49d94e/users/jeszyman/data/mpnst
  #rm -rf $basedir/fastq-test
  #mkdir -p $basedir/fastq-test
  #zcat $basedir/fastq-nci/MPNST/14_JS0108CD040119_R1.fastq.gz | head -n 8000 > $basedir/fastq-test/short_14_JS0108CD040119_R1.fastq
  #zcat $basedir/fastq-nci/MPNST/14_JS0108CD040119_R2.fastq.gz | head -n 8000 > $basedir/fastq-test/short_14_JS0108CD040119_R2.fastq        
  #zcat $basedir/fastq-washu/new_HiSeq-20_L007001_CTTC_R1.fastq.gz | head -n 8000 > $basedir/fastq-test/short_new_HiSeq-20_L007001_CTTC_R1.fastq.gz
  #gzip $basedir/fastq-test/*.fastq
  # setup project repo
- see gnu parallel in [[id:cd560390-aa1e-4c9e-8317-08610e5de42a][linux]]
- https://www.reddit.com/r/bioinformatics/comments/191ykr/resources_for_learning_bioinformatics/
